2024-11-28 21:08:56,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:08:56,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:08:56,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:08:56,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:09:38,117:WARNING:H:\Catolica\TrabalhoN3Martim\testeIA.py:5: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('seu_arquivo.csv')

2024-11-28 21:10:49,508:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:10:49,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:10:49,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:10:49,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:11:11,169:WARNING:H:\Catolica\TrabalhoN3Martim\testeIA.py:5: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('seu_arquivo.csv')

2024-11-28 21:12:32,061:INFO:PyCaret ClassificationExperiment
2024-11-28 21:12:32,061:INFO:Logging name: clf-default-name
2024-11-28 21:12:32,062:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-28 21:12:32,062:INFO:version 3.3.2
2024-11-28 21:12:32,062:INFO:Initializing setup()
2024-11-28 21:12:32,062:INFO:self.USI: 91d6
2024-11-28 21:12:32,062:INFO:self._variable_keys: {'y_test', 'seed', 'memory', 'target_param', 'fold_shuffle_param', 'gpu_param', 'X', 'y_train', 'exp_name_log', 'exp_id', 'pipeline', 'fold_groups_param', 'n_jobs_param', 'is_multiclass', 'USI', 'gpu_n_jobs_param', 'X_train', 'fold_generator', 'idx', 'y', '_available_plots', 'data', 'html_param', 'log_plots_param', 'logging_param', 'fix_imbalance', '_ml_usecase', 'X_test'}
2024-11-28 21:12:32,062:INFO:Checking environment
2024-11-28 21:12:32,062:INFO:python_version: 3.11.0
2024-11-28 21:12:32,062:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2024-11-28 21:12:32,062:INFO:machine: AMD64
2024-11-28 21:12:32,130:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-28 21:12:32,136:INFO:Memory: svmem(total=17093431296, available=2077253632, percent=87.8, used=15016177664, free=2077253632)
2024-11-28 21:12:32,136:INFO:Physical Core: 6
2024-11-28 21:12:32,136:INFO:Logical Core: 6
2024-11-28 21:12:32,137:INFO:Checking libraries
2024-11-28 21:12:32,137:INFO:System:
2024-11-28 21:12:32,137:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2024-11-28 21:12:32,137:INFO:executable: C:\Users\Pio\AppData\Local\Programs\Python\Python311\pythonw.exe
2024-11-28 21:12:32,137:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-28 21:12:32,137:INFO:PyCaret required dependencies:
2024-11-28 21:12:36,922:INFO:                 pip: 22.3
2024-11-28 21:12:36,922:INFO:          setuptools: 65.5.0
2024-11-28 21:12:36,922:INFO:             pycaret: 3.3.2
2024-11-28 21:12:36,922:INFO:             IPython: 8.29.0
2024-11-28 21:12:36,922:INFO:          ipywidgets: 8.1.5
2024-11-28 21:12:36,922:INFO:                tqdm: 4.67.1
2024-11-28 21:12:36,922:INFO:               numpy: 1.26.4
2024-11-28 21:12:36,922:INFO:              pandas: 2.1.4
2024-11-28 21:12:36,922:INFO:              jinja2: 3.1.4
2024-11-28 21:12:36,922:INFO:               scipy: 1.11.4
2024-11-28 21:12:36,922:INFO:              joblib: 1.3.2
2024-11-28 21:12:36,922:INFO:             sklearn: 1.4.2
2024-11-28 21:12:36,922:INFO:                pyod: 2.0.2
2024-11-28 21:12:36,922:INFO:            imblearn: 0.12.4
2024-11-28 21:12:36,922:INFO:   category_encoders: 2.6.4
2024-11-28 21:12:36,923:INFO:            lightgbm: 4.5.0
2024-11-28 21:12:36,923:INFO:               numba: 0.60.0
2024-11-28 21:12:36,923:INFO:            requests: 2.32.3
2024-11-28 21:12:36,923:INFO:          matplotlib: 3.7.5
2024-11-28 21:12:36,923:INFO:          scikitplot: 0.3.7
2024-11-28 21:12:36,923:INFO:         yellowbrick: 1.5
2024-11-28 21:12:36,923:INFO:              plotly: 5.24.1
2024-11-28 21:12:36,923:INFO:    plotly-resampler: Not installed
2024-11-28 21:12:36,923:INFO:             kaleido: 0.2.1
2024-11-28 21:12:36,923:INFO:           schemdraw: 0.15
2024-11-28 21:12:36,923:INFO:         statsmodels: 0.14.4
2024-11-28 21:12:36,923:INFO:              sktime: 0.26.0
2024-11-28 21:12:36,923:INFO:               tbats: 1.1.3
2024-11-28 21:12:36,923:INFO:            pmdarima: 2.0.4
2024-11-28 21:12:36,923:INFO:              psutil: 6.1.0
2024-11-28 21:12:36,923:INFO:          markupsafe: 2.1.5
2024-11-28 21:12:36,923:INFO:             pickle5: Not installed
2024-11-28 21:12:36,923:INFO:         cloudpickle: 3.1.0
2024-11-28 21:12:36,923:INFO:         deprecation: 2.1.0
2024-11-28 21:12:36,923:INFO:              xxhash: 3.5.0
2024-11-28 21:12:36,923:INFO:           wurlitzer: Not installed
2024-11-28 21:12:36,923:INFO:PyCaret optional dependencies:
2024-11-28 21:12:46,919:INFO:                shap: 0.44.1
2024-11-28 21:12:46,920:INFO:           interpret: 0.6.6
2024-11-28 21:12:46,920:INFO:                umap: 0.5.7
2024-11-28 21:12:46,920:INFO:     ydata_profiling: 4.12.0
2024-11-28 21:12:46,920:INFO:  explainerdashboard: 0.4.7
2024-11-28 21:12:46,920:INFO:             autoviz: Not installed
2024-11-28 21:12:46,920:INFO:           fairlearn: 0.7.0
2024-11-28 21:12:46,920:INFO:          deepchecks: Not installed
2024-11-28 21:12:46,920:INFO:             xgboost: Not installed
2024-11-28 21:12:46,920:INFO:            catboost: 1.2.7
2024-11-28 21:12:46,920:INFO:              kmodes: 0.12.2
2024-11-28 21:12:46,920:INFO:             mlxtend: 0.23.3
2024-11-28 21:12:46,920:INFO:       statsforecast: 1.5.0
2024-11-28 21:12:46,920:INFO:        tune_sklearn: Not installed
2024-11-28 21:12:46,920:INFO:                 ray: Not installed
2024-11-28 21:12:46,920:INFO:            hyperopt: 0.2.7
2024-11-28 21:12:46,920:INFO:              optuna: 4.1.0
2024-11-28 21:12:46,920:INFO:               skopt: 0.10.2
2024-11-28 21:12:46,920:INFO:              mlflow: 2.18.0
2024-11-28 21:12:46,920:INFO:              gradio: 5.6.0
2024-11-28 21:12:46,920:INFO:             fastapi: 0.115.5
2024-11-28 21:12:46,921:INFO:             uvicorn: 0.32.1
2024-11-28 21:12:46,921:INFO:              m2cgen: 0.10.0
2024-11-28 21:12:46,921:INFO:           evidently: 0.4.40
2024-11-28 21:12:46,921:INFO:               fugue: 0.8.7
2024-11-28 21:12:46,921:INFO:           streamlit: Not installed
2024-11-28 21:12:46,921:INFO:             prophet: Not installed
2024-11-28 21:12:46,921:INFO:None
2024-11-28 21:12:46,921:INFO:Set up data.
2024-11-28 21:14:08,305:INFO:Set up folding strategy.
2024-11-28 21:14:08,313:INFO:Set up train/test split.
2024-11-28 21:14:29,842:INFO:Set up index.
2024-11-28 21:14:30,924:INFO:Assigning column types.
2024-11-28 21:14:31,125:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-28 21:14:31,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 21:14:31,219:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:14:31,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:14:31,333:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:14:33,817:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 21:14:33,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:14:33,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:14:33,845:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:14:33,845:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-28 21:14:33,893:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:14:33,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:14:33,924:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:14:33,972:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:14:34,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:14:34,002:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:14:34,003:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-28 21:14:34,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:14:34,071:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:14:34,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:14:34,140:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:14:34,162:INFO:Preparing preprocessing pipeline...
2024-11-28 21:14:34,276:INFO:Set up label encoding.
2024-11-28 21:14:34,277:INFO:Set up simple imputation.
2024-11-28 21:14:35,652:INFO:Set up encoding of categorical features.
2024-11-28 21:14:51,777:INFO:Finished creating preprocessing pipeline.
2024-11-28 21:14:51,787:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Pio\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['titleType'],
                                    transformer=OneHotEncoder(cols=['titleType'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-11-28 21:14:51,788:INFO:Creating final display dataframe.
2024-11-28 21:15:13,685:INFO:Setup _display_container:                     Description               Value
0                    Session id                 123
1                        Target          query_type
2                   Target type              Binary
3                Target mapping  genre: 0, title: 1
4           Original data shape      (11270719, 10)
5        Transformed data shape      (11270719, 16)
6   Transformed train set shape       (7889503, 16)
7    Transformed test set shape       (3381216, 16)
8               Ignore features                   4
9          Categorical features                   1
10     Rows with missing values                0.0%
11                   Preprocess                True
12              Imputation type              simple
13           Numeric imputation                mean
14       Categorical imputation                mode
15     Maximum one-hot encoding                  25
16              Encoding method                None
17               Fold Generator     StratifiedKFold
18                  Fold Number                  10
19                     CPU Jobs                  -1
20                      Use GPU               False
21               Log Experiment               False
22              Experiment Name    clf-default-name
23                          USI                91d6
2024-11-28 21:15:13,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:15:13,817:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:15:13,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:15:13,912:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:15:13,923:INFO:setup() successfully completed in 161.87s...............
2024-11-28 21:15:13,928:INFO:Initializing compare_models()
2024-11-28 21:15:13,928:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000255369B4B10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000255369B4B10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-28 21:15:13,928:INFO:Checking exceptions
2024-11-28 21:15:15,358:INFO:Preparing display monitor
2024-11-28 21:15:15,417:INFO:Initializing Logistic Regression
2024-11-28 21:15:15,418:INFO:Total runtime is 1.6645590464274088e-05 minutes
2024-11-28 21:15:15,418:INFO:SubProcess create_model() called ==================================
2024-11-28 21:15:15,422:INFO:Initializing create_model()
2024-11-28 21:15:15,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000255369B4B10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000255539E1A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:15:15,422:INFO:Checking exceptions
2024-11-28 21:15:15,422:INFO:Importing libraries
2024-11-28 21:15:15,422:INFO:Copying training dataset
2024-11-28 21:15:19,037:INFO:Defining folds
2024-11-28 21:15:19,038:INFO:Declaring metric variables
2024-11-28 21:15:19,038:INFO:Importing untrained model
2024-11-28 21:15:19,038:INFO:Logistic Regression Imported successfully
2024-11-28 21:15:19,039:INFO:Starting cross validation
2024-11-28 21:15:19,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:23:28,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:23:28,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:23:28,686:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:23:28,686:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:23:41,247:INFO:PyCaret ClassificationExperiment
2024-11-28 21:23:41,247:INFO:Logging name: clf-default-name
2024-11-28 21:23:41,247:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-28 21:23:41,247:INFO:version 3.3.2
2024-11-28 21:23:41,247:INFO:Initializing setup()
2024-11-28 21:23:41,247:INFO:self.USI: add3
2024-11-28 21:23:41,247:INFO:self._variable_keys: {'gpu_param', 'fold_generator', 'logging_param', '_available_plots', 'gpu_n_jobs_param', 'exp_name_log', 'X_train', 'fold_shuffle_param', 'memory', 'log_plots_param', 'data', 'seed', 'X_test', 'fold_groups_param', 'is_multiclass', 'y', 'USI', 'html_param', 'idx', 'target_param', 'y_train', 'n_jobs_param', 'X', 'exp_id', 'y_test', 'fix_imbalance', 'pipeline', '_ml_usecase'}
2024-11-28 21:23:41,247:INFO:Checking environment
2024-11-28 21:23:41,247:INFO:python_version: 3.11.0
2024-11-28 21:23:41,247:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2024-11-28 21:23:41,247:INFO:machine: AMD64
2024-11-28 21:23:41,291:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-28 21:23:41,294:INFO:Memory: svmem(total=17093431296, available=7968079872, percent=53.4, used=9125351424, free=7968079872)
2024-11-28 21:23:41,294:INFO:Physical Core: 6
2024-11-28 21:23:41,294:INFO:Logical Core: 6
2024-11-28 21:23:41,294:INFO:Checking libraries
2024-11-28 21:23:41,294:INFO:System:
2024-11-28 21:23:41,294:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2024-11-28 21:23:41,294:INFO:executable: C:\Users\Pio\AppData\Local\Programs\Python\Python311\pythonw.exe
2024-11-28 21:23:41,294:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-28 21:23:41,294:INFO:PyCaret required dependencies:
2024-11-28 21:23:45,063:INFO:                 pip: 22.3
2024-11-28 21:23:45,063:INFO:          setuptools: 65.5.0
2024-11-28 21:23:45,063:INFO:             pycaret: 3.3.2
2024-11-28 21:23:45,063:INFO:             IPython: 8.29.0
2024-11-28 21:23:45,063:INFO:          ipywidgets: 8.1.5
2024-11-28 21:23:45,063:INFO:                tqdm: 4.67.1
2024-11-28 21:23:45,063:INFO:               numpy: 1.26.4
2024-11-28 21:23:45,063:INFO:              pandas: 2.1.4
2024-11-28 21:23:45,063:INFO:              jinja2: 3.1.4
2024-11-28 21:23:45,063:INFO:               scipy: 1.11.4
2024-11-28 21:23:45,063:INFO:              joblib: 1.3.2
2024-11-28 21:23:45,063:INFO:             sklearn: 1.4.2
2024-11-28 21:23:45,063:INFO:                pyod: 2.0.2
2024-11-28 21:23:45,063:INFO:            imblearn: 0.12.4
2024-11-28 21:23:45,063:INFO:   category_encoders: 2.6.4
2024-11-28 21:23:45,063:INFO:            lightgbm: 4.5.0
2024-11-28 21:23:45,064:INFO:               numba: 0.60.0
2024-11-28 21:23:45,064:INFO:            requests: 2.32.3
2024-11-28 21:23:45,064:INFO:          matplotlib: 3.7.5
2024-11-28 21:23:45,064:INFO:          scikitplot: 0.3.7
2024-11-28 21:23:45,064:INFO:         yellowbrick: 1.5
2024-11-28 21:23:45,064:INFO:              plotly: 5.24.1
2024-11-28 21:23:45,064:INFO:    plotly-resampler: Not installed
2024-11-28 21:23:45,064:INFO:             kaleido: 0.2.1
2024-11-28 21:23:45,064:INFO:           schemdraw: 0.15
2024-11-28 21:23:45,064:INFO:         statsmodels: 0.14.4
2024-11-28 21:23:45,064:INFO:              sktime: 0.26.0
2024-11-28 21:23:45,064:INFO:               tbats: 1.1.3
2024-11-28 21:23:45,064:INFO:            pmdarima: 2.0.4
2024-11-28 21:23:45,064:INFO:              psutil: 6.1.0
2024-11-28 21:23:45,064:INFO:          markupsafe: 2.1.5
2024-11-28 21:23:45,064:INFO:             pickle5: Not installed
2024-11-28 21:23:45,064:INFO:         cloudpickle: 3.1.0
2024-11-28 21:23:45,064:INFO:         deprecation: 2.1.0
2024-11-28 21:23:45,064:INFO:              xxhash: 3.5.0
2024-11-28 21:23:45,065:INFO:           wurlitzer: Not installed
2024-11-28 21:23:45,065:INFO:PyCaret optional dependencies:
2024-11-28 21:23:53,298:INFO:                shap: 0.44.1
2024-11-28 21:23:53,298:INFO:           interpret: 0.6.6
2024-11-28 21:23:53,298:INFO:                umap: 0.5.7
2024-11-28 21:23:53,298:INFO:     ydata_profiling: 4.12.0
2024-11-28 21:23:53,299:INFO:  explainerdashboard: 0.4.7
2024-11-28 21:23:53,299:INFO:             autoviz: Not installed
2024-11-28 21:23:53,299:INFO:           fairlearn: 0.7.0
2024-11-28 21:23:53,299:INFO:          deepchecks: Not installed
2024-11-28 21:23:53,299:INFO:             xgboost: Not installed
2024-11-28 21:23:53,299:INFO:            catboost: 1.2.7
2024-11-28 21:23:53,299:INFO:              kmodes: 0.12.2
2024-11-28 21:23:53,299:INFO:             mlxtend: 0.23.3
2024-11-28 21:23:53,299:INFO:       statsforecast: 1.5.0
2024-11-28 21:23:53,299:INFO:        tune_sklearn: Not installed
2024-11-28 21:23:53,299:INFO:                 ray: Not installed
2024-11-28 21:23:53,299:INFO:            hyperopt: 0.2.7
2024-11-28 21:23:53,299:INFO:              optuna: 4.1.0
2024-11-28 21:23:53,299:INFO:               skopt: 0.10.2
2024-11-28 21:23:53,299:INFO:              mlflow: 2.18.0
2024-11-28 21:23:53,299:INFO:              gradio: 5.6.0
2024-11-28 21:23:53,299:INFO:             fastapi: 0.115.5
2024-11-28 21:23:53,299:INFO:             uvicorn: 0.32.1
2024-11-28 21:23:53,299:INFO:              m2cgen: 0.10.0
2024-11-28 21:23:53,299:INFO:           evidently: 0.4.40
2024-11-28 21:23:53,299:INFO:               fugue: 0.8.7
2024-11-28 21:23:53,299:INFO:           streamlit: Not installed
2024-11-28 21:23:53,299:INFO:             prophet: Not installed
2024-11-28 21:23:53,299:INFO:None
2024-11-28 21:23:53,299:INFO:Set up data.
2024-11-28 21:23:53,326:INFO:Set up folding strategy.
2024-11-28 21:23:53,327:INFO:Set up train/test split.
2024-11-28 21:23:53,342:INFO:Set up index.
2024-11-28 21:23:53,344:INFO:Assigning column types.
2024-11-28 21:23:53,346:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-28 21:23:53,381:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 21:23:53,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:23:53,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:53,454:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:55,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 21:23:55,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:23:55,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:55,544:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:55,545:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-28 21:23:55,582:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:23:55,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:55,604:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:55,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:23:55,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:55,663:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:55,663:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-28 21:23:55,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:55,723:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:55,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:55,784:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:55,794:INFO:Preparing preprocessing pipeline...
2024-11-28 21:23:55,796:INFO:Set up label encoding.
2024-11-28 21:23:55,796:INFO:Set up simple imputation.
2024-11-28 21:23:55,798:INFO:Set up encoding of ordinal features.
2024-11-28 21:23:55,799:INFO:Set up encoding of categorical features.
2024-11-28 21:23:55,860:INFO:Finished creating preprocessing pipeline.
2024-11-28 21:23:55,878:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Pio\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['isAdult'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                                              strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(exclude=None, include=['titleType'],
                                    transformer=OrdinalEncoder(cols=['titleType'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-11-28 21:23:55,879:INFO:Creating final display dataframe.
2024-11-28 21:23:56,036:INFO:Setup _display_container:                     Description               Value
0                    Session id                 123
1                        Target          query_type
2                   Target type              Binary
3                Target mapping  genre: 0, title: 1
4           Original data shape          (6218, 10)
5        Transformed data shape           (6218, 6)
6   Transformed train set shape           (4352, 6)
7    Transformed test set shape           (1866, 6)
8               Ignore features                   4
9              Numeric features                   1
10         Categorical features                   1
11                   Preprocess                True
12              Imputation type              simple
13           Numeric imputation                mean
14       Categorical imputation                mode
15     Maximum one-hot encoding                  25
16              Encoding method                None
17               Fold Generator     StratifiedKFold
18                  Fold Number                  10
19                     CPU Jobs                  -1
20                      Use GPU               False
21               Log Experiment               False
22              Experiment Name    clf-default-name
23                          USI                add3
2024-11-28 21:23:56,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:56,140:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:56,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:23:56,199:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:23:56,201:INFO:setup() successfully completed in 14.97s...............
2024-11-28 21:23:56,201:INFO:Initializing compare_models()
2024-11-28 21:23:56,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-28 21:23:56,201:INFO:Checking exceptions
2024-11-28 21:23:56,203:INFO:Preparing display monitor
2024-11-28 21:23:56,226:INFO:Initializing Logistic Regression
2024-11-28 21:23:56,226:INFO:Total runtime is 0.0 minutes
2024-11-28 21:23:56,226:INFO:SubProcess create_model() called ==================================
2024-11-28 21:23:56,226:INFO:Initializing create_model()
2024-11-28 21:23:56,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:23:56,226:INFO:Checking exceptions
2024-11-28 21:23:56,226:INFO:Importing libraries
2024-11-28 21:23:56,227:INFO:Copying training dataset
2024-11-28 21:23:56,230:INFO:Defining folds
2024-11-28 21:23:56,230:INFO:Declaring metric variables
2024-11-28 21:23:56,230:INFO:Importing untrained model
2024-11-28 21:23:56,230:INFO:Logistic Regression Imported successfully
2024-11-28 21:23:56,231:INFO:Starting cross validation
2024-11-28 21:23:56,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:01,745:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:01,780:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py", line 1201, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:01,780:INFO:Initializing create_model()
2024-11-28 21:24:01,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:01,780:INFO:Checking exceptions
2024-11-28 21:24:01,780:INFO:Importing libraries
2024-11-28 21:24:01,780:INFO:Copying training dataset
2024-11-28 21:24:01,791:INFO:Defining folds
2024-11-28 21:24:01,791:INFO:Declaring metric variables
2024-11-28 21:24:01,792:INFO:Importing untrained model
2024-11-28 21:24:01,792:INFO:Logistic Regression Imported successfully
2024-11-28 21:24:01,792:INFO:Starting cross validation
2024-11-28 21:24:01,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:01,907:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-11-28 21:24:01,909:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py", line 1201, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py", line 1201, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:01,909:INFO:Initializing K Neighbors Classifier
2024-11-28 21:24:01,909:INFO:Total runtime is 0.09472335974375407 minutes
2024-11-28 21:24:01,909:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:01,909:INFO:Initializing create_model()
2024-11-28 21:24:01,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:01,909:INFO:Checking exceptions
2024-11-28 21:24:01,909:INFO:Importing libraries
2024-11-28 21:24:01,909:INFO:Copying training dataset
2024-11-28 21:24:01,925:INFO:Defining folds
2024-11-28 21:24:01,925:INFO:Declaring metric variables
2024-11-28 21:24:01,925:INFO:Importing untrained model
2024-11-28 21:24:01,925:INFO:K Neighbors Classifier Imported successfully
2024-11-28 21:24:01,926:INFO:Starting cross validation
2024-11-28 21:24:01,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:02,032:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:02,033:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 238, in fit
    return self._fit(X, y)
           ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_base.py", line 683, in _fit
    self._tree = KDTree(
                 ^^^^^^^
  File "sklearn\\neighbors\\_binary_tree.pxi", line 900, in sklearn.neighbors._kd_tree.BinaryTree64.__init__
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:02,033:INFO:Initializing create_model()
2024-11-28 21:24:02,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:02,033:INFO:Checking exceptions
2024-11-28 21:24:02,033:INFO:Importing libraries
2024-11-28 21:24:02,033:INFO:Copying training dataset
2024-11-28 21:24:02,054:INFO:Defining folds
2024-11-28 21:24:02,054:INFO:Declaring metric variables
2024-11-28 21:24:02,054:INFO:Importing untrained model
2024-11-28 21:24:02,054:INFO:K Neighbors Classifier Imported successfully
2024-11-28 21:24:02,054:INFO:Starting cross validation
2024-11-28 21:24:02,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:02,142:ERROR:create_model() for knn raised an exception or returned all 0.0:
2024-11-28 21:24:02,144:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 238, in fit
    return self._fit(X, y)
           ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_base.py", line 683, in _fit
    self._tree = KDTree(
                 ^^^^^^^
  File "sklearn\\neighbors\\_binary_tree.pxi", line 900, in sklearn.neighbors._kd_tree.BinaryTree64.__init__
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_classification.py", line 238, in fit
    return self._fit(X, y)
           ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\neighbors\_base.py", line 683, in _fit
    self._tree = KDTree(
                 ^^^^^^^
  File "sklearn\\neighbors\\_binary_tree.pxi", line 900, in sklearn.neighbors._kd_tree.BinaryTree64.__init__
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:02,144:INFO:Initializing Naive Bayes
2024-11-28 21:24:02,144:INFO:Total runtime is 0.09863215287526449 minutes
2024-11-28 21:24:02,144:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:02,144:INFO:Initializing create_model()
2024-11-28 21:24:02,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:02,144:INFO:Checking exceptions
2024-11-28 21:24:02,144:INFO:Importing libraries
2024-11-28 21:24:02,144:INFO:Copying training dataset
2024-11-28 21:24:02,179:INFO:Defining folds
2024-11-28 21:24:02,179:INFO:Declaring metric variables
2024-11-28 21:24:02,179:INFO:Importing untrained model
2024-11-28 21:24:02,179:INFO:Naive Bayes Imported successfully
2024-11-28 21:24:02,179:INFO:Starting cross validation
2024-11-28 21:24:02,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:02,317:WARNING:create_model() for nb raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:02,318:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\naive_bayes.py", line 431, in _partial_fit
    self.epsilon_ = self.var_smoothing * np.var(X, axis=0).max()
                                         ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\fromnumeric.py", line 3787, in var
    return _methods._var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\_methods.py", line 163, in _var
    arrmean = um.true_divide(arrmean, div, out=arrmean,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


2024-11-28 21:24:02,318:INFO:Initializing create_model()
2024-11-28 21:24:02,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:02,318:INFO:Checking exceptions
2024-11-28 21:24:02,318:INFO:Importing libraries
2024-11-28 21:24:02,318:INFO:Copying training dataset
2024-11-28 21:24:02,348:INFO:Defining folds
2024-11-28 21:24:02,348:INFO:Declaring metric variables
2024-11-28 21:24:02,348:INFO:Importing untrained model
2024-11-28 21:24:02,349:INFO:Naive Bayes Imported successfully
2024-11-28 21:24:02,349:INFO:Starting cross validation
2024-11-28 21:24:02,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:02,460:ERROR:create_model() for nb raised an exception or returned all 0.0:
2024-11-28 21:24:02,462:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\naive_bayes.py", line 431, in _partial_fit
    self.epsilon_ = self.var_smoothing * np.var(X, axis=0).max()
                                         ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\fromnumeric.py", line 3787, in var
    return _methods._var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\_methods.py", line 163, in _var
    arrmean = um.true_divide(arrmean, div, out=arrmean,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\naive_bayes.py", line 431, in _partial_fit
    self.epsilon_ = self.var_smoothing * np.var(X, axis=0).max()
                                         ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\fromnumeric.py", line 3787, in var
    return _methods._var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\_methods.py", line 163, in _var
    arrmean = um.true_divide(arrmean, div, out=arrmean,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


2024-11-28 21:24:02,462:INFO:Initializing Decision Tree Classifier
2024-11-28 21:24:02,462:INFO:Total runtime is 0.10394070545832317 minutes
2024-11-28 21:24:02,462:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:02,462:INFO:Initializing create_model()
2024-11-28 21:24:02,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:02,462:INFO:Checking exceptions
2024-11-28 21:24:02,463:INFO:Importing libraries
2024-11-28 21:24:02,463:INFO:Copying training dataset
2024-11-28 21:24:02,504:INFO:Defining folds
2024-11-28 21:24:02,504:INFO:Declaring metric variables
2024-11-28 21:24:02,504:INFO:Importing untrained model
2024-11-28 21:24:02,504:INFO:Decision Tree Classifier Imported successfully
2024-11-28 21:24:02,504:INFO:Starting cross validation
2024-11-28 21:24:02,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:02,614:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:02,615:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 1009, in fit
    super()._fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 252, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 645, in _validate_data
    X = check_array(X, input_name="X", **check_X_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:02,615:INFO:Initializing create_model()
2024-11-28 21:24:02,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:02,615:INFO:Checking exceptions
2024-11-28 21:24:02,615:INFO:Importing libraries
2024-11-28 21:24:02,616:INFO:Copying training dataset
2024-11-28 21:24:02,658:INFO:Defining folds
2024-11-28 21:24:02,658:INFO:Declaring metric variables
2024-11-28 21:24:02,658:INFO:Importing untrained model
2024-11-28 21:24:02,658:INFO:Decision Tree Classifier Imported successfully
2024-11-28 21:24:02,659:INFO:Starting cross validation
2024-11-28 21:24:02,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:02,747:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-11-28 21:24:02,749:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 1009, in fit
    super()._fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 252, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 645, in _validate_data
    X = check_array(X, input_name="X", **check_X_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 1009, in fit
    super()._fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 252, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 645, in _validate_data
    X = check_array(X, input_name="X", **check_X_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:02,749:INFO:Initializing SVM - Linear Kernel
2024-11-28 21:24:02,750:INFO:Total runtime is 0.10874073108037313 minutes
2024-11-28 21:24:02,750:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:02,750:INFO:Initializing create_model()
2024-11-28 21:24:02,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:02,750:INFO:Checking exceptions
2024-11-28 21:24:02,750:INFO:Importing libraries
2024-11-28 21:24:02,750:INFO:Copying training dataset
2024-11-28 21:24:02,814:INFO:Defining folds
2024-11-28 21:24:02,814:INFO:Declaring metric variables
2024-11-28 21:24:02,814:INFO:Importing untrained model
2024-11-28 21:24:02,815:INFO:SVM - Linear Kernel Imported successfully
2024-11-28 21:24:02,815:INFO:Starting cross validation
2024-11-28 21:24:02,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:02,915:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:02,916:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
           ^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:02,916:INFO:Initializing create_model()
2024-11-28 21:24:02,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:02,916:INFO:Checking exceptions
2024-11-28 21:24:02,916:INFO:Importing libraries
2024-11-28 21:24:02,916:INFO:Copying training dataset
2024-11-28 21:24:02,997:INFO:Defining folds
2024-11-28 21:24:02,998:INFO:Declaring metric variables
2024-11-28 21:24:02,998:INFO:Importing untrained model
2024-11-28 21:24:02,998:INFO:SVM - Linear Kernel Imported successfully
2024-11-28 21:24:02,998:INFO:Starting cross validation
2024-11-28 21:24:02,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:03,096:ERROR:create_model() for svm raised an exception or returned all 0.0:
2024-11-28 21:24:03,097:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
           ^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
           ^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 596, in _partial_fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:03,098:INFO:Initializing Ridge Classifier
2024-11-28 21:24:03,098:INFO:Total runtime is 0.1145348866780599 minutes
2024-11-28 21:24:03,098:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:03,098:INFO:Initializing create_model()
2024-11-28 21:24:03,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:03,098:INFO:Checking exceptions
2024-11-28 21:24:03,098:INFO:Importing libraries
2024-11-28 21:24:03,098:INFO:Copying training dataset
2024-11-28 21:24:03,191:INFO:Defining folds
2024-11-28 21:24:03,191:INFO:Declaring metric variables
2024-11-28 21:24:03,191:INFO:Importing untrained model
2024-11-28 21:24:03,192:INFO:Ridge Classifier Imported successfully
2024-11-28 21:24:03,192:INFO:Starting cross validation
2024-11-28 21:24:03,192:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:03,304:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:03,305:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_ridge.py", line 1479, in fit
    super().fit(X, Y, sample_weight=sample_weight)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_ridge.py", line 893, in fit
    X, y, X_offset, y_offset, X_scale = _preprocess_data(
                                        ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 164, in _preprocess_data
    X = check_array(X, copy=copy, accept_sparse=["csr", "csc"], dtype=FLOAT_DTYPES)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:03,305:INFO:Initializing create_model()
2024-11-28 21:24:03,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:03,305:INFO:Checking exceptions
2024-11-28 21:24:03,305:INFO:Importing libraries
2024-11-28 21:24:03,305:INFO:Copying training dataset
2024-11-28 21:24:03,391:INFO:Defining folds
2024-11-28 21:24:03,391:INFO:Declaring metric variables
2024-11-28 21:24:03,392:INFO:Importing untrained model
2024-11-28 21:24:03,392:INFO:Ridge Classifier Imported successfully
2024-11-28 21:24:03,392:INFO:Starting cross validation
2024-11-28 21:24:03,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:03,495:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2024-11-28 21:24:03,497:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_ridge.py", line 1479, in fit
    super().fit(X, Y, sample_weight=sample_weight)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_ridge.py", line 893, in fit
    X, y, X_offset, y_offset, X_scale = _preprocess_data(
                                        ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 164, in _preprocess_data
    X = check_array(X, copy=copy, accept_sparse=["csr", "csc"], dtype=FLOAT_DTYPES)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_ridge.py", line 1479, in fit
    super().fit(X, Y, sample_weight=sample_weight)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_ridge.py", line 893, in fit
    X, y, X_offset, y_offset, X_scale = _preprocess_data(
                                        ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 164, in _preprocess_data
    X = check_array(X, copy=copy, accept_sparse=["csr", "csc"], dtype=FLOAT_DTYPES)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:03,497:INFO:Initializing Random Forest Classifier
2024-11-28 21:24:03,498:INFO:Total runtime is 0.1212020754814148 minutes
2024-11-28 21:24:03,498:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:03,498:INFO:Initializing create_model()
2024-11-28 21:24:03,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:03,498:INFO:Checking exceptions
2024-11-28 21:24:03,498:INFO:Importing libraries
2024-11-28 21:24:03,498:INFO:Copying training dataset
2024-11-28 21:24:03,617:INFO:Defining folds
2024-11-28 21:24:03,617:INFO:Declaring metric variables
2024-11-28 21:24:03,617:INFO:Importing untrained model
2024-11-28 21:24:03,617:INFO:Random Forest Classifier Imported successfully
2024-11-28 21:24:03,618:INFO:Starting cross validation
2024-11-28 21:24:03,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:03,712:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:03,713:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py", line 363, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:03,713:INFO:Initializing create_model()
2024-11-28 21:24:03,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:03,713:INFO:Checking exceptions
2024-11-28 21:24:03,713:INFO:Importing libraries
2024-11-28 21:24:03,713:INFO:Copying training dataset
2024-11-28 21:24:03,849:INFO:Defining folds
2024-11-28 21:24:03,849:INFO:Declaring metric variables
2024-11-28 21:24:03,849:INFO:Importing untrained model
2024-11-28 21:24:03,850:INFO:Random Forest Classifier Imported successfully
2024-11-28 21:24:03,850:INFO:Starting cross validation
2024-11-28 21:24:03,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:03,940:ERROR:create_model() for rf raised an exception or returned all 0.0:
2024-11-28 21:24:03,942:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py", line 363, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py", line 363, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:03,942:INFO:Initializing Quadratic Discriminant Analysis
2024-11-28 21:24:03,942:INFO:Total runtime is 0.12860074838002525 minutes
2024-11-28 21:24:03,942:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:03,942:INFO:Initializing create_model()
2024-11-28 21:24:03,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:03,942:INFO:Checking exceptions
2024-11-28 21:24:03,942:INFO:Importing libraries
2024-11-28 21:24:03,942:INFO:Copying training dataset
2024-11-28 21:24:04,092:INFO:Defining folds
2024-11-28 21:24:04,093:INFO:Declaring metric variables
2024-11-28 21:24:04,093:INFO:Importing untrained model
2024-11-28 21:24:04,093:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-28 21:24:04,093:INFO:Starting cross validation
2024-11-28 21:24:04,094:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:04,200:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:04,201:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py", line 923, in fit
    meang = Xg.mean(0)
            ^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


2024-11-28 21:24:04,201:INFO:Initializing create_model()
2024-11-28 21:24:04,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:04,202:INFO:Checking exceptions
2024-11-28 21:24:04,202:INFO:Importing libraries
2024-11-28 21:24:04,202:INFO:Copying training dataset
2024-11-28 21:24:04,378:INFO:Defining folds
2024-11-28 21:24:04,378:INFO:Declaring metric variables
2024-11-28 21:24:04,378:INFO:Importing untrained model
2024-11-28 21:24:04,379:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-28 21:24:04,519:INFO:Starting cross validation
2024-11-28 21:24:04,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:04,625:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-11-28 21:24:04,627:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py", line 923, in fit
    meang = Xg.mean(0)
            ^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py", line 923, in fit
    meang = Xg.mean(0)
            ^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\numpy\core\_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


2024-11-28 21:24:04,627:INFO:Initializing Ada Boost Classifier
2024-11-28 21:24:04,627:INFO:Total runtime is 0.14001742601394657 minutes
2024-11-28 21:24:04,627:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:04,628:INFO:Initializing create_model()
2024-11-28 21:24:04,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:04,628:INFO:Checking exceptions
2024-11-28 21:24:04,628:INFO:Importing libraries
2024-11-28 21:24:04,628:INFO:Copying training dataset
2024-11-28 21:24:04,827:INFO:Defining folds
2024-11-28 21:24:04,827:INFO:Declaring metric variables
2024-11-28 21:24:04,828:INFO:Importing untrained model
2024-11-28 21:24:04,828:INFO:Ada Boost Classifier Imported successfully
2024-11-28 21:24:04,987:INFO:Starting cross validation
2024-11-28 21:24:04,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:05,040:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,040:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,041:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,041:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,044:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,058:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,074:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,076:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,076:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,079:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,090:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:05,091:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 169, in fit
    sample_weight, estimator_weight, estimator_error = self._boost(
                                                       ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 586, in _boost
    return self._boost_real(iboost, X, y, sample_weight, random_state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 597, in _boost_real
    estimator.fit(X, y, sample_weight=sample_weight)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 1009, in fit
    super()._fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 252, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 645, in _validate_data
    X = check_array(X, input_name="X", **check_X_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:05,091:INFO:Initializing create_model()
2024-11-28 21:24:05,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:05,091:INFO:Checking exceptions
2024-11-28 21:24:05,091:INFO:Importing libraries
2024-11-28 21:24:05,091:INFO:Copying training dataset
2024-11-28 21:24:05,298:INFO:Defining folds
2024-11-28 21:24:05,298:INFO:Declaring metric variables
2024-11-28 21:24:05,298:INFO:Importing untrained model
2024-11-28 21:24:05,298:INFO:Ada Boost Classifier Imported successfully
2024-11-28 21:24:05,561:INFO:Starting cross validation
2024-11-28 21:24:05,562:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:05,600:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,603:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,606:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,610:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,610:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,621:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,646:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,646:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,651:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,651:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:24:05,664:ERROR:create_model() for ada raised an exception or returned all 0.0:
2024-11-28 21:24:05,666:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 169, in fit
    sample_weight, estimator_weight, estimator_error = self._boost(
                                                       ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 586, in _boost
    return self._boost_real(iboost, X, y, sample_weight, random_state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 597, in _boost_real
    estimator.fit(X, y, sample_weight=sample_weight)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 1009, in fit
    super()._fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 252, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 645, in _validate_data
    X = check_array(X, input_name="X", **check_X_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 169, in fit
    sample_weight, estimator_weight, estimator_error = self._boost(
                                                       ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 586, in _boost
    return self._boost_real(iboost, X, y, sample_weight, random_state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 597, in _boost_real
    estimator.fit(X, y, sample_weight=sample_weight)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 1009, in fit
    super()._fit(
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\tree\_classes.py", line 252, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 645, in _validate_data
    X = check_array(X, input_name="X", **check_X_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:05,666:INFO:Initializing Gradient Boosting Classifier
2024-11-28 21:24:05,666:INFO:Total runtime is 0.15733447869618739 minutes
2024-11-28 21:24:05,666:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:05,666:INFO:Initializing create_model()
2024-11-28 21:24:05,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:05,666:INFO:Checking exceptions
2024-11-28 21:24:05,666:INFO:Importing libraries
2024-11-28 21:24:05,666:INFO:Copying training dataset
2024-11-28 21:24:05,899:INFO:Defining folds
2024-11-28 21:24:05,899:INFO:Declaring metric variables
2024-11-28 21:24:05,899:INFO:Importing untrained model
2024-11-28 21:24:05,899:INFO:Gradient Boosting Classifier Imported successfully
2024-11-28 21:24:06,178:INFO:Starting cross validation
2024-11-28 21:24:06,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:06,274:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:06,275:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_gb.py", line 659, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:06,275:INFO:Initializing create_model()
2024-11-28 21:24:06,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:06,275:INFO:Checking exceptions
2024-11-28 21:24:06,275:INFO:Importing libraries
2024-11-28 21:24:06,275:INFO:Copying training dataset
2024-11-28 21:24:06,606:INFO:Defining folds
2024-11-28 21:24:06,606:INFO:Declaring metric variables
2024-11-28 21:24:06,606:INFO:Importing untrained model
2024-11-28 21:24:06,607:INFO:Gradient Boosting Classifier Imported successfully
2024-11-28 21:24:06,903:INFO:Starting cross validation
2024-11-28 21:24:06,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:06,988:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2024-11-28 21:24:06,990:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_gb.py", line 659, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_gb.py", line 659, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:06,990:INFO:Initializing Linear Discriminant Analysis
2024-11-28 21:24:06,990:INFO:Total runtime is 0.1793930848439535 minutes
2024-11-28 21:24:06,990:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:06,990:INFO:Initializing create_model()
2024-11-28 21:24:06,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:06,991:INFO:Checking exceptions
2024-11-28 21:24:06,991:INFO:Importing libraries
2024-11-28 21:24:06,991:INFO:Copying training dataset
2024-11-28 21:24:07,389:INFO:Defining folds
2024-11-28 21:24:07,389:INFO:Declaring metric variables
2024-11-28 21:24:07,390:INFO:Importing untrained model
2024-11-28 21:24:07,390:INFO:Linear Discriminant Analysis Imported successfully
2024-11-28 21:24:07,749:INFO:Starting cross validation
2024-11-28 21:24:07,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:07,832:WARNING:create_model() for lda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:07,833:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:07,833:INFO:Initializing create_model()
2024-11-28 21:24:07,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:07,833:INFO:Checking exceptions
2024-11-28 21:24:07,833:INFO:Importing libraries
2024-11-28 21:24:07,833:INFO:Copying training dataset
2024-11-28 21:24:08,279:INFO:Defining folds
2024-11-28 21:24:08,279:INFO:Declaring metric variables
2024-11-28 21:24:08,279:INFO:Importing untrained model
2024-11-28 21:24:08,280:INFO:Linear Discriminant Analysis Imported successfully
2024-11-28 21:24:08,739:INFO:Starting cross validation
2024-11-28 21:24:08,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:08,832:ERROR:create_model() for lda raised an exception or returned all 0.0:
2024-11-28 21:24:08,834:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:08,834:INFO:Initializing Extra Trees Classifier
2024-11-28 21:24:08,834:INFO:Total runtime is 0.210135293006897 minutes
2024-11-28 21:24:08,834:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:08,834:INFO:Initializing create_model()
2024-11-28 21:24:08,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:08,834:INFO:Checking exceptions
2024-11-28 21:24:08,834:INFO:Importing libraries
2024-11-28 21:24:08,834:INFO:Copying training dataset
2024-11-28 21:24:09,275:INFO:Defining folds
2024-11-28 21:24:09,275:INFO:Declaring metric variables
2024-11-28 21:24:09,275:INFO:Importing untrained model
2024-11-28 21:24:09,276:INFO:Extra Trees Classifier Imported successfully
2024-11-28 21:24:09,770:INFO:Starting cross validation
2024-11-28 21:24:09,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:09,856:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:09,857:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py", line 363, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:09,857:INFO:Initializing create_model()
2024-11-28 21:24:09,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:09,858:INFO:Checking exceptions
2024-11-28 21:24:09,858:INFO:Importing libraries
2024-11-28 21:24:09,858:INFO:Copying training dataset
2024-11-28 21:24:10,404:INFO:Defining folds
2024-11-28 21:24:10,404:INFO:Declaring metric variables
2024-11-28 21:24:10,405:INFO:Importing untrained model
2024-11-28 21:24:10,405:INFO:Extra Trees Classifier Imported successfully
2024-11-28 21:24:10,894:INFO:Starting cross validation
2024-11-28 21:24:10,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:10,979:ERROR:create_model() for et raised an exception or returned all 0.0:
2024-11-28 21:24:10,981:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py", line 363, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_forest.py", line 363, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py", line 2084, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '\\N'


2024-11-28 21:24:10,981:INFO:Initializing Light Gradient Boosting Machine
2024-11-28 21:24:10,981:INFO:Total runtime is 0.24592101176579798 minutes
2024-11-28 21:24:10,982:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:10,982:INFO:Initializing create_model()
2024-11-28 21:24:10,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:10,982:INFO:Checking exceptions
2024-11-28 21:24:10,982:INFO:Importing libraries
2024-11-28 21:24:10,982:INFO:Copying training dataset
2024-11-28 21:24:11,516:INFO:Defining folds
2024-11-28 21:24:11,516:INFO:Declaring metric variables
2024-11-28 21:24:11,516:INFO:Importing untrained model
2024-11-28 21:24:11,516:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-28 21:24:12,101:INFO:Starting cross validation
2024-11-28 21:24:12,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:12,423:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,433:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,444:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,454:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,458:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,463:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,468:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,472:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,473:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,475:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,476:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,477:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,479:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,483:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,484:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,489:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,495:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,707:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,715:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,728:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,731:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,735:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,739:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,751:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,755:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,755:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,759:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,759:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,763:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:12,774:INFO:Calculating mean and std
2024-11-28 21:24:13,408:INFO:Creating metrics dataframe
2024-11-28 21:24:14,079:INFO:Uploading results into container
2024-11-28 21:24:14,079:INFO:Uploading model into container now
2024-11-28 21:24:14,080:INFO:_master_model_container: 1
2024-11-28 21:24:14,080:INFO:_display_container: 2
2024-11-28 21:24:14,080:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-28 21:24:14,080:INFO:create_model() successfully completed......................................
2024-11-28 21:24:14,177:INFO:SubProcess create_model() end ==================================
2024-11-28 21:24:14,177:INFO:Creating metrics dataframe
2024-11-28 21:24:14,178:INFO:Initializing CatBoost Classifier
2024-11-28 21:24:14,178:INFO:Total runtime is 0.299201246102651 minutes
2024-11-28 21:24:14,179:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:14,179:INFO:Initializing create_model()
2024-11-28 21:24:14,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:14,179:INFO:Checking exceptions
2024-11-28 21:24:14,179:INFO:Importing libraries
2024-11-28 21:24:14,179:INFO:Copying training dataset
2024-11-28 21:24:14,821:INFO:Defining folds
2024-11-28 21:24:14,822:INFO:Declaring metric variables
2024-11-28 21:24:14,822:INFO:Importing untrained model
2024-11-28 21:24:14,822:INFO:CatBoost Classifier Imported successfully
2024-11-28 21:24:15,526:INFO:Starting cross validation
2024-11-28 21:24:15,527:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:16,194:WARNING:create_model() for catboost raised an exception or returned all 0.0, trying without fit_kwargs:
2024-11-28 21:24:16,195:WARNING:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 2395, in _fit
    train_params = self._prepare_train_params(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 2275, in _prepare_train_params
    train_pool = _build_train_pool(X, y, cat_features, text_features, embedding_features, pairs, graph,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 1513, in _build_train_pool
    train_pool = Pool(X, y, cat_features=cat_features, text_features=text_features, embedding_features=embedding_features, pairs=pairs, graph=graph, weight=sample_weight, group_id=group_id,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 855, in __init__
    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 1491, in _init
    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,
  File "_catboost.pyx", line 4339, in _catboost._PoolBase._init_pool
  File "_catboost.pyx", line 4391, in _catboost._PoolBase._init_pool
  File "_catboost.pyx", line 4200, in _catboost._PoolBase._init_features_order_layout_pool
  File "_catboost.pyx", line 3083, in _catboost._set_features_order_data_pd_data_frame
_catboost.CatBoostError: features data: pandas.DataFrame column 'startYear' has dtype 'category' but is not in  cat_features list


2024-11-28 21:24:16,195:INFO:Initializing create_model()
2024-11-28 21:24:16,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:16,195:INFO:Checking exceptions
2024-11-28 21:24:16,195:INFO:Importing libraries
2024-11-28 21:24:16,195:INFO:Copying training dataset
2024-11-28 21:24:16,928:INFO:Defining folds
2024-11-28 21:24:16,928:INFO:Declaring metric variables
2024-11-28 21:24:16,929:INFO:Importing untrained model
2024-11-28 21:24:16,929:INFO:CatBoost Classifier Imported successfully
2024-11-28 21:24:17,699:INFO:Starting cross validation
2024-11-28 21:24:17,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:17,784:ERROR:create_model() for catboost raised an exception or returned all 0.0:
2024-11-28 21:24:17,785:ERROR:Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 2395, in _fit
    train_params = self._prepare_train_params(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 2275, in _prepare_train_params
    train_pool = _build_train_pool(X, y, cat_features, text_features, embedding_features, pairs, graph,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 1513, in _build_train_pool
    train_pool = Pool(X, y, cat_features=cat_features, text_features=text_features, embedding_features=embedding_features, pairs=pairs, graph=graph, weight=sample_weight, group_id=group_id,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 855, in __init__
    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 1491, in _init
    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,
  File "_catboost.pyx", line 4339, in _catboost._PoolBase._init_pool
  File "_catboost.pyx", line 4391, in _catboost._PoolBase._init_pool
  File "_catboost.pyx", line 4200, in _catboost._PoolBase._init_features_order_layout_pool
  File "_catboost.pyx", line 3083, in _catboost._set_features_order_data_pd_data_frame
_catboost.CatBoostError: features data: pandas.DataFrame column 'startYear' has dtype 'category' but is not in  cat_features list


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 2395, in _fit
    train_params = self._prepare_train_params(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 2275, in _prepare_train_params
    train_pool = _build_train_pool(X, y, cat_features, text_features, embedding_features, pairs, graph,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 1513, in _build_train_pool
    train_pool = Pool(X, y, cat_features=cat_features, text_features=text_features, embedding_features=embedding_features, pairs=pairs, graph=graph, weight=sample_weight, group_id=group_id,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 855, in __init__
    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,
  File "C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 1491, in _init
    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,
  File "_catboost.pyx", line 4339, in _catboost._PoolBase._init_pool
  File "_catboost.pyx", line 4391, in _catboost._PoolBase._init_pool
  File "_catboost.pyx", line 4200, in _catboost._PoolBase._init_features_order_layout_pool
  File "_catboost.pyx", line 3083, in _catboost._set_features_order_data_pd_data_frame
_catboost.CatBoostError: features data: pandas.DataFrame column 'startYear' has dtype 'category' but is not in  cat_features list


2024-11-28 21:24:17,785:INFO:Initializing Dummy Classifier
2024-11-28 21:24:17,785:INFO:Total runtime is 0.35932425260543827 minutes
2024-11-28 21:24:17,785:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:17,785:INFO:Initializing create_model()
2024-11-28 21:24:17,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C35938D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:17,785:INFO:Checking exceptions
2024-11-28 21:24:17,785:INFO:Importing libraries
2024-11-28 21:24:17,785:INFO:Copying training dataset
2024-11-28 21:24:18,524:INFO:Defining folds
2024-11-28 21:24:18,524:INFO:Declaring metric variables
2024-11-28 21:24:18,525:INFO:Importing untrained model
2024-11-28 21:24:18,525:INFO:Dummy Classifier Imported successfully
2024-11-28 21:24:19,311:INFO:Starting cross validation
2024-11-28 21:24:19,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:19,373:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,373:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,375:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,376:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,378:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,379:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,380:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,381:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,381:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,381:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,382:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,383:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,383:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,384:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,384:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,384:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,385:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,385:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,387:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,389:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,390:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,392:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,394:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,436:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,437:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,438:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,440:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,441:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,442:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,442:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,442:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,444:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,445:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,445:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,445:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,446:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,449:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,451:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:24:19,453:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:19,470:INFO:Calculating mean and std
2024-11-28 21:24:20,345:INFO:Creating metrics dataframe
2024-11-28 21:24:21,256:INFO:Uploading results into container
2024-11-28 21:24:21,256:INFO:Uploading model into container now
2024-11-28 21:24:21,257:INFO:_master_model_container: 2
2024-11-28 21:24:21,257:INFO:_display_container: 2
2024-11-28 21:24:21,257:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-28 21:24:21,257:INFO:create_model() successfully completed......................................
2024-11-28 21:24:21,345:INFO:SubProcess create_model() end ==================================
2024-11-28 21:24:21,345:INFO:Creating metrics dataframe
2024-11-28 21:24:22,250:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-11-28 21:24:23,217:INFO:Initializing create_model()
2024-11-28 21:24:23,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:23,217:INFO:Checking exceptions
2024-11-28 21:24:23,217:INFO:Importing libraries
2024-11-28 21:24:23,217:INFO:Copying training dataset
2024-11-28 21:24:23,220:INFO:Defining folds
2024-11-28 21:24:23,220:INFO:Declaring metric variables
2024-11-28 21:24:23,220:INFO:Importing untrained model
2024-11-28 21:24:23,220:INFO:Declaring custom model
2024-11-28 21:24:23,221:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-28 21:24:23,222:INFO:Cross validation set to False
2024-11-28 21:24:23,222:INFO:Fitting Model
2024-11-28 21:24:23,249:INFO:[LightGBM] [Info] Number of positive: 1139, number of negative: 3213
2024-11-28 21:24:23,249:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000482 seconds.
2024-11-28 21:24:23,250:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-28 21:24:23,250:INFO:[LightGBM] [Info] Total Bins 99
2024-11-28 21:24:23,250:INFO:[LightGBM] [Info] Number of data points in the train set: 4352, number of used features: 3
2024-11-28 21:24:23,250:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.261719 -> initscore=-1.037054
2024-11-28 21:24:23,250:INFO:[LightGBM] [Info] Start training from score -1.037054
2024-11-28 21:24:23,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:23,411:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-28 21:24:23,411:INFO:create_model() successfully completed......................................
2024-11-28 21:24:27,744:INFO:_master_model_container: 2
2024-11-28 21:24:27,744:INFO:_display_container: 2
2024-11-28 21:24:27,744:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-28 21:24:27,744:INFO:compare_models() successfully completed......................................
2024-11-28 21:24:27,745:INFO:Initializing tune_model()
2024-11-28 21:24:27,745:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-11-28 21:24:27,745:INFO:Checking exceptions
2024-11-28 21:24:27,748:INFO:Copying training dataset
2024-11-28 21:24:27,750:INFO:Checking base model
2024-11-28 21:24:27,750:INFO:Base model : Light Gradient Boosting Machine
2024-11-28 21:24:27,750:INFO:Declaring metric variables
2024-11-28 21:24:27,751:INFO:Defining Hyperparameters
2024-11-28 21:24:27,838:INFO:Tuning with n_jobs=-1
2024-11-28 21:24:27,838:INFO:Initializing RandomizedSearchCV
2024-11-28 21:24:31,924:INFO:best_params: {'actual_estimator__reg_lambda': 0.0005, 'actual_estimator__reg_alpha': 0.005, 'actual_estimator__num_leaves': 150, 'actual_estimator__n_estimators': 20, 'actual_estimator__min_split_gain': 0.3, 'actual_estimator__min_child_samples': 6, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.9}
2024-11-28 21:24:31,942:INFO:Hyperparameter search completed
2024-11-28 21:24:31,942:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:31,943:INFO:Initializing create_model()
2024-11-28 21:24:31,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C9C20A1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.0005, 'reg_alpha': 0.005, 'num_leaves': 150, 'n_estimators': 20, 'min_split_gain': 0.3, 'min_child_samples': 6, 'learning_rate': 0.4, 'feature_fraction': 0.5, 'bagging_freq': 3, 'bagging_fraction': 0.9})
2024-11-28 21:24:31,943:INFO:Checking exceptions
2024-11-28 21:24:31,943:INFO:Importing libraries
2024-11-28 21:24:31,943:INFO:Copying training dataset
2024-11-28 21:24:31,947:INFO:Defining folds
2024-11-28 21:24:31,947:INFO:Declaring metric variables
2024-11-28 21:24:31,947:INFO:Importing untrained model
2024-11-28 21:24:31,947:INFO:Declaring custom model
2024-11-28 21:24:31,948:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-28 21:24:31,948:INFO:Starting cross validation
2024-11-28 21:24:31,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:32,081:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,082:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,084:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,084:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,085:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,086:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,094:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,103:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,126:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,129:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,131:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,131:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,135:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,137:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,185:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,190:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,193:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,203:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,236:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,239:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,240:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,243:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,244:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,245:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,248:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,249:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,254:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,270:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,275:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,278:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:32,298:INFO:Calculating mean and std
2024-11-28 21:24:32,417:INFO:Creating metrics dataframe
2024-11-28 21:24:32,419:INFO:Finalizing model
2024-11-28 21:24:32,454:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2024-11-28 21:24:32,454:INFO:[LightGBM] [Warning] bagging_fraction is set=0.9, subsample=1.0 will be ignored. Current value: bagging_fraction=0.9
2024-11-28 21:24:32,454:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2024-11-28 21:24:32,457:INFO:[LightGBM] [Warning] feature_fraction is set=0.5, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.5
2024-11-28 21:24:32,457:INFO:[LightGBM] [Warning] bagging_fraction is set=0.9, subsample=1.0 will be ignored. Current value: bagging_fraction=0.9
2024-11-28 21:24:32,457:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2024-11-28 21:24:32,458:INFO:[LightGBM] [Info] Number of positive: 1139, number of negative: 3213
2024-11-28 21:24:32,458:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000471 seconds.
2024-11-28 21:24:32,458:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-28 21:24:32,459:INFO:[LightGBM] [Info] Total Bins 99
2024-11-28 21:24:32,459:INFO:[LightGBM] [Info] Number of data points in the train set: 4352, number of used features: 3
2024-11-28 21:24:32,459:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.261719 -> initscore=-1.037054
2024-11-28 21:24:32,459:INFO:[LightGBM] [Info] Start training from score -1.037054
2024-11-28 21:24:32,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:32,759:INFO:Uploading results into container
2024-11-28 21:24:32,760:INFO:Uploading model into container now
2024-11-28 21:24:32,760:INFO:_master_model_container: 3
2024-11-28 21:24:32,760:INFO:_display_container: 3
2024-11-28 21:24:32,761:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=6, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=20, n_jobs=-1, num_leaves=150, objective=None,
               random_state=123, reg_alpha=0.005, reg_lambda=0.0005,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-11-28 21:24:32,761:INFO:create_model() successfully completed......................................
2024-11-28 21:24:32,971:INFO:SubProcess create_model() end ==================================
2024-11-28 21:24:32,971:INFO:choose_better activated
2024-11-28 21:24:32,973:INFO:SubProcess create_model() called ==================================
2024-11-28 21:24:32,975:INFO:Initializing create_model()
2024-11-28 21:24:32,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:24:32,975:INFO:Checking exceptions
2024-11-28 21:24:32,976:INFO:Importing libraries
2024-11-28 21:24:32,976:INFO:Copying training dataset
2024-11-28 21:24:32,983:INFO:Defining folds
2024-11-28 21:24:32,983:INFO:Declaring metric variables
2024-11-28 21:24:32,984:INFO:Importing untrained model
2024-11-28 21:24:32,984:INFO:Declaring custom model
2024-11-28 21:24:32,985:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-28 21:24:32,986:INFO:Starting cross validation
2024-11-28 21:24:32,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:24:33,376:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,384:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,385:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,386:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,391:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,393:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,395:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,397:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,399:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,401:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,425:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,429:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,434:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,445:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,446:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,451:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,454:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,457:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,702:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,706:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,710:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,732:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,737:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,742:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,809:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,814:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,818:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,821:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,827:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,831:WARNING:C:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:24:33,843:INFO:Calculating mean and std
2024-11-28 21:24:33,843:INFO:Creating metrics dataframe
2024-11-28 21:24:33,845:INFO:Finalizing model
2024-11-28 21:24:33,870:INFO:[LightGBM] [Info] Number of positive: 1139, number of negative: 3213
2024-11-28 21:24:33,870:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000213 seconds.
2024-11-28 21:24:33,870:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-28 21:24:33,871:INFO:[LightGBM] [Info] Total Bins 99
2024-11-28 21:24:33,871:INFO:[LightGBM] [Info] Number of data points in the train set: 4352, number of used features: 3
2024-11-28 21:24:33,871:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.261719 -> initscore=-1.037054
2024-11-28 21:24:33,871:INFO:[LightGBM] [Info] Start training from score -1.037054
2024-11-28 21:24:33,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,912:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:33,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-28 21:24:34,041:INFO:Uploading results into container
2024-11-28 21:24:34,041:INFO:Uploading model into container now
2024-11-28 21:24:34,041:INFO:_master_model_container: 4
2024-11-28 21:24:34,041:INFO:_display_container: 4
2024-11-28 21:24:34,042:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-28 21:24:34,042:INFO:create_model() successfully completed......................................
2024-11-28 21:24:34,129:INFO:SubProcess create_model() end ==================================
2024-11-28 21:24:34,130:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8846
2024-11-28 21:24:34,130:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=6, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=20, n_jobs=-1, num_leaves=150, objective=None,
               random_state=123, reg_alpha=0.005, reg_lambda=0.0005,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8888
2024-11-28 21:24:34,131:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=6, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=20, n_jobs=-1, num_leaves=150, objective=None,
               random_state=123, reg_alpha=0.005, reg_lambda=0.0005,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2024-11-28 21:24:34,131:INFO:choose_better completed
2024-11-28 21:24:34,240:INFO:_master_model_container: 4
2024-11-28 21:24:34,240:INFO:_display_container: 3
2024-11-28 21:24:34,240:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=6, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=20, n_jobs=-1, num_leaves=150, objective=None,
               random_state=123, reg_alpha=0.005, reg_lambda=0.0005,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2024-11-28 21:24:34,241:INFO:tune_model() successfully completed......................................
2024-11-28 21:24:34,333:INFO:Initializing evaluate_model()
2024-11-28 21:24:34,334:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=6, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=20, n_jobs=-1, num_leaves=150, objective=None,
               random_state=123, reg_alpha=0.005, reg_lambda=0.0005,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-28 21:24:35,087:INFO:Initializing plot_model()
2024-11-28 21:24:35,087:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C9BED15950>, estimator=LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=6, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=20, n_jobs=-1, num_leaves=150, objective=None,
               random_state=123, reg_alpha=0.005, reg_lambda=0.0005,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-11-28 21:24:35,087:INFO:Checking exceptions
2024-11-28 21:24:35,088:INFO:Preloading libraries
2024-11-28 21:24:35,089:INFO:Copying training dataset
2024-11-28 21:24:35,089:INFO:Plot type: pipeline
2024-11-28 21:24:39,156:INFO:Visual Rendered Successfully
2024-11-28 21:24:39,257:INFO:plot_model() successfully completed......................................
2024-11-28 21:24:39,402:INFO:Initializing save_model()
2024-11-28 21:24:39,402:INFO:save_model(model=LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=6, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=20, n_jobs=-1, num_leaves=150, objective=None,
               random_state=123, reg_alpha=0.005, reg_lambda=0.0005,
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), model_name=modelo_treinado, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Pio\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['isAdult'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                                              strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(exclude=None, include=['titleType'],
                                    transformer=OrdinalEncoder(cols=['titleType'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-28 21:24:39,402:INFO:Adding model into prep_pipe
2024-11-28 21:24:39,460:INFO:modelo_treinado.pkl saved in current working directory
2024-11-28 21:24:39,472:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['isAdult'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='me...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.5,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=6,
                                min_child_weight=0.001, min_split_gain=0.3,
                                n_estimators=20, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=123,
                                reg_alpha=0.005, reg_lambda=0.0005,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2024-11-28 21:24:39,472:INFO:save_model() successfully completed......................................
2024-11-28 21:25:50,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:25:50,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:25:50,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:25:50,415:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:26:09,381:WARNING:H:\Catolica\TrabalhoN3Martim\runIA.py.py:5: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('seu_arquivo.csv')

2024-11-28 21:26:14,882:INFO:Initializing load_model()
2024-11-28 21:26:14,885:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:27:02,788:INFO:Initializing predict_model()
2024-11-28 21:27:02,788:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DFFDEB2750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['isAdult'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['titleType'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}]))),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.9, bagging_freq=3,
                                feature_fraction=0.5, learning_rate=0.4,
                                min_child_samples=6, min_split_gain=0.3,
                                n_estimators=20, n_jobs=-1, num_leaves=150,
                                random_state=123, reg_alpha=0.005,
                                reg_lambda=0.0005))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DFFDF72D40>)
2024-11-28 21:27:02,788:INFO:Checking exceptions
2024-11-28 21:27:02,788:INFO:Preloading libraries
2024-11-28 21:27:02,789:INFO:Set up data.
2024-11-28 21:27:02,793:INFO:Set up index.
2024-11-28 21:29:47,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:29:47,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:29:47,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:29:47,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:30:16,421:WARNING:h:\Catolica\TrabalhoN3Martim\runIA.py:5: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('seu_arquivo.csv')

2024-11-28 21:30:17,643:INFO:Initializing load_model()
2024-11-28 21:30:17,643:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:44:43,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:44:43,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:44:43,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:44:43,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:44:51,392:INFO:Initializing load_model()
2024-11-28 21:44:51,393:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:44:57,040:INFO:Initializing predict_model()
2024-11-28 21:44:57,040:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E21E05B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['isAdult'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['titleType'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}]))),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.9, bagging_freq=3,
                                feature_fraction=0.5, learning_rate=0.4,
                                min_child_samples=6, min_split_gain=0.3,
                                n_estimators=20, n_jobs=-1, num_leaves=150,
                                random_state=123, reg_alpha=0.005,
                                reg_lambda=0.0005))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E2E626520>)
2024-11-28 21:44:57,040:INFO:Checking exceptions
2024-11-28 21:44:57,041:INFO:Preloading libraries
2024-11-28 21:44:57,041:INFO:Set up data.
2024-11-28 21:44:57,044:INFO:Set up index.
2024-11-28 21:45:54,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:45:54,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:45:54,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:45:54,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:45:58,721:INFO:Initializing load_model()
2024-11-28 21:45:58,722:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:46:03,066:INFO:Initializing predict_model()
2024-11-28 21:46:03,066:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021E8530CA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['isAdult'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['titleType'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}]))),
                ('trained_model',
                 LGBMClassifier(bagging_fraction=0.9, bagging_freq=3,
                                feature_fraction=0.5, learning_rate=0.4,
                                min_child_samples=6, min_split_gain=0.3,
                                n_estimators=20, n_jobs=-1, num_leaves=150,
                                random_state=123, reg_alpha=0.005,
                                reg_lambda=0.0005))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021E852EDA80>)
2024-11-28 21:46:03,066:INFO:Checking exceptions
2024-11-28 21:46:03,066:INFO:Preloading libraries
2024-11-28 21:46:03,066:INFO:Set up data.
2024-11-28 21:46:03,069:INFO:Set up index.
2024-11-28 21:47:21,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:47:21,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:47:21,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:47:21,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:47:23,418:INFO:PyCaret ClassificationExperiment
2024-11-28 21:47:23,418:INFO:Logging name: clf-default-name
2024-11-28 21:47:23,418:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-28 21:47:23,418:INFO:version 3.3.2
2024-11-28 21:47:23,418:INFO:Initializing setup()
2024-11-28 21:47:23,418:INFO:self.USI: 2287
2024-11-28 21:47:23,418:INFO:self._variable_keys: {'_available_plots', 'gpu_n_jobs_param', 'fold_generator', 'log_plots_param', 'memory', 'y_test', '_ml_usecase', 'is_multiclass', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'y', 'X', 'y_train', 'fold_groups_param', 'X_test', 'logging_param', 'target_param', 'exp_id', 'X_train', 'idx', 'seed', 'data', 'pipeline', 'gpu_param', 'exp_name_log', 'fix_imbalance', 'USI'}
2024-11-28 21:47:23,418:INFO:Checking environment
2024-11-28 21:47:23,418:INFO:python_version: 3.11.0
2024-11-28 21:47:23,418:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2024-11-28 21:47:23,418:INFO:machine: AMD64
2024-11-28 21:47:23,428:INFO:platform: Windows-10-10.0.19045-SP0
2024-11-28 21:47:23,431:INFO:Memory: svmem(total=17093431296, available=6948589568, percent=59.3, used=10144841728, free=6948589568)
2024-11-28 21:47:23,431:INFO:Physical Core: 6
2024-11-28 21:47:23,431:INFO:Logical Core: 6
2024-11-28 21:47:23,431:INFO:Checking libraries
2024-11-28 21:47:23,431:INFO:System:
2024-11-28 21:47:23,431:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2024-11-28 21:47:23,431:INFO:executable: c:\Users\Pio\AppData\Local\Programs\Python\Python311\python.exe
2024-11-28 21:47:23,431:INFO:   machine: Windows-10-10.0.19045-SP0
2024-11-28 21:47:23,431:INFO:PyCaret required dependencies:
2024-11-28 21:47:24,333:INFO:                 pip: 22.3
2024-11-28 21:47:24,333:INFO:          setuptools: 65.5.0
2024-11-28 21:47:24,333:INFO:             pycaret: 3.3.2
2024-11-28 21:47:24,333:INFO:             IPython: 8.29.0
2024-11-28 21:47:24,333:INFO:          ipywidgets: 8.1.5
2024-11-28 21:47:24,333:INFO:                tqdm: 4.67.1
2024-11-28 21:47:24,333:INFO:               numpy: 1.26.4
2024-11-28 21:47:24,333:INFO:              pandas: 2.1.4
2024-11-28 21:47:24,333:INFO:              jinja2: 3.1.4
2024-11-28 21:47:24,333:INFO:               scipy: 1.11.4
2024-11-28 21:47:24,333:INFO:              joblib: 1.3.2
2024-11-28 21:47:24,333:INFO:             sklearn: 1.4.2
2024-11-28 21:47:24,333:INFO:                pyod: 2.0.2
2024-11-28 21:47:24,333:INFO:            imblearn: 0.12.4
2024-11-28 21:47:24,333:INFO:   category_encoders: 2.6.4
2024-11-28 21:47:24,333:INFO:            lightgbm: 4.5.0
2024-11-28 21:47:24,333:INFO:               numba: 0.60.0
2024-11-28 21:47:24,333:INFO:            requests: 2.32.3
2024-11-28 21:47:24,333:INFO:          matplotlib: 3.7.5
2024-11-28 21:47:24,334:INFO:          scikitplot: 0.3.7
2024-11-28 21:47:24,334:INFO:         yellowbrick: 1.5
2024-11-28 21:47:24,334:INFO:              plotly: 5.24.1
2024-11-28 21:47:24,334:INFO:    plotly-resampler: Not installed
2024-11-28 21:47:24,334:INFO:             kaleido: 0.2.1
2024-11-28 21:47:24,334:INFO:           schemdraw: 0.15
2024-11-28 21:47:24,334:INFO:         statsmodels: 0.14.4
2024-11-28 21:47:24,334:INFO:              sktime: 0.26.0
2024-11-28 21:47:24,334:INFO:               tbats: 1.1.3
2024-11-28 21:47:24,334:INFO:            pmdarima: 2.0.4
2024-11-28 21:47:24,334:INFO:              psutil: 6.1.0
2024-11-28 21:47:24,334:INFO:          markupsafe: 2.1.5
2024-11-28 21:47:24,334:INFO:             pickle5: Not installed
2024-11-28 21:47:24,334:INFO:         cloudpickle: 3.1.0
2024-11-28 21:47:24,334:INFO:         deprecation: 2.1.0
2024-11-28 21:47:24,334:INFO:              xxhash: 3.5.0
2024-11-28 21:47:24,334:INFO:           wurlitzer: Not installed
2024-11-28 21:47:24,334:INFO:PyCaret optional dependencies:
2024-11-28 21:47:28,604:INFO:                shap: 0.44.1
2024-11-28 21:47:28,604:INFO:           interpret: 0.6.6
2024-11-28 21:47:28,604:INFO:                umap: 0.5.7
2024-11-28 21:47:28,604:INFO:     ydata_profiling: 4.12.0
2024-11-28 21:47:28,604:INFO:  explainerdashboard: 0.4.7
2024-11-28 21:47:28,604:INFO:             autoviz: Not installed
2024-11-28 21:47:28,604:INFO:           fairlearn: 0.7.0
2024-11-28 21:47:28,604:INFO:          deepchecks: Not installed
2024-11-28 21:47:28,604:INFO:             xgboost: Not installed
2024-11-28 21:47:28,604:INFO:            catboost: 1.2.7
2024-11-28 21:47:28,604:INFO:              kmodes: 0.12.2
2024-11-28 21:47:28,604:INFO:             mlxtend: 0.23.3
2024-11-28 21:47:28,604:INFO:       statsforecast: 1.5.0
2024-11-28 21:47:28,604:INFO:        tune_sklearn: Not installed
2024-11-28 21:47:28,604:INFO:                 ray: Not installed
2024-11-28 21:47:28,604:INFO:            hyperopt: 0.2.7
2024-11-28 21:47:28,605:INFO:              optuna: 4.1.0
2024-11-28 21:47:28,605:INFO:               skopt: 0.10.2
2024-11-28 21:47:28,605:INFO:              mlflow: 2.18.0
2024-11-28 21:47:28,605:INFO:              gradio: 5.6.0
2024-11-28 21:47:28,605:INFO:             fastapi: 0.115.5
2024-11-28 21:47:28,605:INFO:             uvicorn: 0.32.1
2024-11-28 21:47:28,605:INFO:              m2cgen: 0.10.0
2024-11-28 21:47:28,605:INFO:           evidently: 0.4.40
2024-11-28 21:47:28,605:INFO:               fugue: 0.8.7
2024-11-28 21:47:28,605:INFO:           streamlit: Not installed
2024-11-28 21:47:28,605:INFO:             prophet: Not installed
2024-11-28 21:47:28,605:INFO:None
2024-11-28 21:47:28,605:INFO:Set up data.
2024-11-28 21:47:28,624:INFO:Set up folding strategy.
2024-11-28 21:47:28,624:INFO:Set up train/test split.
2024-11-28 21:47:28,636:INFO:Set up index.
2024-11-28 21:47:28,636:INFO:Assigning column types.
2024-11-28 21:47:28,638:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-28 21:47:28,678:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 21:47:28,681:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:47:28,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:28,715:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:30,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 21:47:30,859:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:47:30,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:30,886:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:30,886:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-28 21:47:30,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:47:30,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:30,948:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:30,987:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 21:47:31,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:31,012:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:31,013:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-28 21:47:31,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:31,075:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:31,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:31,138:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:31,149:INFO:Preparing preprocessing pipeline...
2024-11-28 21:47:31,150:INFO:Set up label encoding.
2024-11-28 21:47:31,150:INFO:Set up simple imputation.
2024-11-28 21:47:31,152:INFO:Set up encoding of ordinal features.
2024-11-28 21:47:31,153:INFO:Set up encoding of categorical features.
2024-11-28 21:47:31,201:INFO:Finished creating preprocessing pipeline.
2024-11-28 21:47:31,217:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Pio\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                              strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(exclude=None, include=['titleType'],
                                    transformer=OrdinalEncoder(cols=['titleType'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-11-28 21:47:31,218:INFO:Creating final display dataframe.
2024-11-28 21:47:31,315:INFO:Setup _display_container:                     Description               Value
0                    Session id                 123
1                        Target          query_type
2                   Target type              Binary
3                Target mapping  genre: 0, title: 1
4           Original data shape           (6218, 6)
5        Transformed data shape           (6218, 2)
6   Transformed train set shape           (4352, 2)
7    Transformed test set shape           (1866, 2)
8               Ignore features                   4
9          Categorical features                   1
10                   Preprocess                True
11              Imputation type              simple
12           Numeric imputation                mean
13       Categorical imputation                mode
14     Maximum one-hot encoding                  25
15              Encoding method                None
16               Fold Generator     StratifiedKFold
17                  Fold Number                  10
18                     CPU Jobs                  -1
19                      Use GPU               False
20               Log Experiment               False
21              Experiment Name    clf-default-name
22                          USI                2287
2024-11-28 21:47:31,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:31,391:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:31,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 21:47:31,454:INFO:Soft dependency imported: catboost: 1.2.7
2024-11-28 21:47:31,456:INFO:setup() successfully completed in 8.05s...............
2024-11-28 21:47:31,456:INFO:Initializing compare_models()
2024-11-28 21:47:31,456:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-28 21:47:31,456:INFO:Checking exceptions
2024-11-28 21:47:31,461:INFO:Preparing display monitor
2024-11-28 21:47:31,464:INFO:Initializing Logistic Regression
2024-11-28 21:47:31,464:INFO:Total runtime is 0.0 minutes
2024-11-28 21:47:31,464:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:31,464:INFO:Initializing create_model()
2024-11-28 21:47:31,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:31,465:INFO:Checking exceptions
2024-11-28 21:47:31,465:INFO:Importing libraries
2024-11-28 21:47:31,465:INFO:Copying training dataset
2024-11-28 21:47:31,468:INFO:Defining folds
2024-11-28 21:47:31,468:INFO:Declaring metric variables
2024-11-28 21:47:31,468:INFO:Importing untrained model
2024-11-28 21:47:31,469:INFO:Logistic Regression Imported successfully
2024-11-28 21:47:31,469:INFO:Starting cross validation
2024-11-28 21:47:31,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:39,155:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,161:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,166:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,186:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,191:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,197:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,305:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,310:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,315:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,324:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,328:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,328:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,333:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,333:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,339:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,360:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,370:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,375:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,381:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,386:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,391:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,417:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,421:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,427:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,522:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,527:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,532:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,778:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,783:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,788:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:39,801:INFO:Calculating mean and std
2024-11-28 21:47:39,802:INFO:Creating metrics dataframe
2024-11-28 21:47:39,804:INFO:Uploading results into container
2024-11-28 21:47:39,805:INFO:Uploading model into container now
2024-11-28 21:47:39,805:INFO:_master_model_container: 1
2024-11-28 21:47:39,805:INFO:_display_container: 2
2024-11-28 21:47:39,806:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 21:47:39,806:INFO:create_model() successfully completed......................................
2024-11-28 21:47:39,933:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:39,933:INFO:Creating metrics dataframe
2024-11-28 21:47:39,937:INFO:Initializing K Neighbors Classifier
2024-11-28 21:47:39,937:INFO:Total runtime is 0.14122533400853474 minutes
2024-11-28 21:47:39,937:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:39,937:INFO:Initializing create_model()
2024-11-28 21:47:39,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:39,937:INFO:Checking exceptions
2024-11-28 21:47:39,937:INFO:Importing libraries
2024-11-28 21:47:39,937:INFO:Copying training dataset
2024-11-28 21:47:39,941:INFO:Defining folds
2024-11-28 21:47:39,941:INFO:Declaring metric variables
2024-11-28 21:47:39,941:INFO:Importing untrained model
2024-11-28 21:47:39,941:INFO:K Neighbors Classifier Imported successfully
2024-11-28 21:47:39,942:INFO:Starting cross validation
2024-11-28 21:47:39,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:40,161:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,163:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,165:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,169:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,204:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,204:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,211:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,218:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,221:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,222:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,222:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,227:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,233:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,235:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,261:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,270:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,373:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,379:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,387:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,389:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,406:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,411:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,439:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,453:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,487:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,499:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,504:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,509:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,524:INFO:Calculating mean and std
2024-11-28 21:47:40,525:INFO:Creating metrics dataframe
2024-11-28 21:47:40,527:INFO:Uploading results into container
2024-11-28 21:47:40,527:INFO:Uploading model into container now
2024-11-28 21:47:40,528:INFO:_master_model_container: 2
2024-11-28 21:47:40,528:INFO:_display_container: 2
2024-11-28 21:47:40,528:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-28 21:47:40,528:INFO:create_model() successfully completed......................................
2024-11-28 21:47:40,655:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:40,656:INFO:Creating metrics dataframe
2024-11-28 21:47:40,660:INFO:Initializing Naive Bayes
2024-11-28 21:47:40,660:INFO:Total runtime is 0.1532726287841797 minutes
2024-11-28 21:47:40,660:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:40,660:INFO:Initializing create_model()
2024-11-28 21:47:40,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:40,660:INFO:Checking exceptions
2024-11-28 21:47:40,660:INFO:Importing libraries
2024-11-28 21:47:40,660:INFO:Copying training dataset
2024-11-28 21:47:40,664:INFO:Defining folds
2024-11-28 21:47:40,664:INFO:Declaring metric variables
2024-11-28 21:47:40,664:INFO:Importing untrained model
2024-11-28 21:47:40,664:INFO:Naive Bayes Imported successfully
2024-11-28 21:47:40,664:INFO:Starting cross validation
2024-11-28 21:47:40,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:40,721:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,727:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,727:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,729:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,731:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,733:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,734:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,738:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,743:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,743:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,748:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,752:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,763:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,769:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,774:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,778:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,782:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,785:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,788:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,791:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,793:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,796:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,797:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,802:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,817:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,821:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,824:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,826:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,829:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,835:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:40,854:INFO:Calculating mean and std
2024-11-28 21:47:40,855:INFO:Creating metrics dataframe
2024-11-28 21:47:40,856:INFO:Uploading results into container
2024-11-28 21:47:40,856:INFO:Uploading model into container now
2024-11-28 21:47:40,857:INFO:_master_model_container: 3
2024-11-28 21:47:40,857:INFO:_display_container: 2
2024-11-28 21:47:40,857:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-28 21:47:40,857:INFO:create_model() successfully completed......................................
2024-11-28 21:47:40,964:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:40,964:INFO:Creating metrics dataframe
2024-11-28 21:47:40,966:INFO:Initializing Decision Tree Classifier
2024-11-28 21:47:40,966:INFO:Total runtime is 0.15836803515752157 minutes
2024-11-28 21:47:40,967:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:40,967:INFO:Initializing create_model()
2024-11-28 21:47:40,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:40,967:INFO:Checking exceptions
2024-11-28 21:47:40,967:INFO:Importing libraries
2024-11-28 21:47:40,967:INFO:Copying training dataset
2024-11-28 21:47:40,969:INFO:Defining folds
2024-11-28 21:47:40,969:INFO:Declaring metric variables
2024-11-28 21:47:40,970:INFO:Importing untrained model
2024-11-28 21:47:40,970:INFO:Decision Tree Classifier Imported successfully
2024-11-28 21:47:40,970:INFO:Starting cross validation
2024-11-28 21:47:40,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:41,023:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,024:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,025:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,029:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,030:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,030:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,033:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,034:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,034:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,039:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,041:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,045:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,051:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,053:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,056:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,068:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,072:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,073:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,075:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,078:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,078:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,080:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,083:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,085:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,089:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,095:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,097:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,100:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,102:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,107:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,122:INFO:Calculating mean and std
2024-11-28 21:47:41,123:INFO:Creating metrics dataframe
2024-11-28 21:47:41,124:INFO:Uploading results into container
2024-11-28 21:47:41,124:INFO:Uploading model into container now
2024-11-28 21:47:41,125:INFO:_master_model_container: 4
2024-11-28 21:47:41,125:INFO:_display_container: 2
2024-11-28 21:47:41,125:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-11-28 21:47:41,125:INFO:create_model() successfully completed......................................
2024-11-28 21:47:41,232:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:41,232:INFO:Creating metrics dataframe
2024-11-28 21:47:41,234:INFO:Initializing SVM - Linear Kernel
2024-11-28 21:47:41,234:INFO:Total runtime is 0.16282867987950644 minutes
2024-11-28 21:47:41,234:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:41,234:INFO:Initializing create_model()
2024-11-28 21:47:41,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:41,234:INFO:Checking exceptions
2024-11-28 21:47:41,234:INFO:Importing libraries
2024-11-28 21:47:41,234:INFO:Copying training dataset
2024-11-28 21:47:41,237:INFO:Defining folds
2024-11-28 21:47:41,238:INFO:Declaring metric variables
2024-11-28 21:47:41,238:INFO:Importing untrained model
2024-11-28 21:47:41,238:INFO:SVM - Linear Kernel Imported successfully
2024-11-28 21:47:41,239:INFO:Starting cross validation
2024-11-28 21:47:41,239:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:41,293:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,297:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,298:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,298:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,301:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,302:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,302:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,306:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,307:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,316:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,316:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,321:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,323:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,328:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,351:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,353:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,357:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,357:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,359:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,361:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,361:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,364:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,367:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,369:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,369:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,372:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,374:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,374:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,380:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,394:INFO:Calculating mean and std
2024-11-28 21:47:41,395:INFO:Creating metrics dataframe
2024-11-28 21:47:41,396:INFO:Uploading results into container
2024-11-28 21:47:41,397:INFO:Uploading model into container now
2024-11-28 21:47:41,397:INFO:_master_model_container: 5
2024-11-28 21:47:41,397:INFO:_display_container: 2
2024-11-28 21:47:41,398:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-28 21:47:41,398:INFO:create_model() successfully completed......................................
2024-11-28 21:47:41,503:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:41,503:INFO:Creating metrics dataframe
2024-11-28 21:47:41,506:INFO:Initializing Ridge Classifier
2024-11-28 21:47:41,506:INFO:Total runtime is 0.16736247936884563 minutes
2024-11-28 21:47:41,506:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:41,506:INFO:Initializing create_model()
2024-11-28 21:47:41,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:41,506:INFO:Checking exceptions
2024-11-28 21:47:41,506:INFO:Importing libraries
2024-11-28 21:47:41,506:INFO:Copying training dataset
2024-11-28 21:47:41,509:INFO:Defining folds
2024-11-28 21:47:41,510:INFO:Declaring metric variables
2024-11-28 21:47:41,510:INFO:Importing untrained model
2024-11-28 21:47:41,510:INFO:Ridge Classifier Imported successfully
2024-11-28 21:47:41,510:INFO:Starting cross validation
2024-11-28 21:47:41,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:41,566:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,573:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,573:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,574:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,579:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,579:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,580:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,582:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,584:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,586:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,589:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,595:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,603:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,615:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,620:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,628:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,630:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,631:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,632:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,634:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,635:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,637:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,637:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,640:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,640:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,642:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,645:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,646:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,649:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:41,665:INFO:Calculating mean and std
2024-11-28 21:47:41,665:INFO:Creating metrics dataframe
2024-11-28 21:47:41,667:INFO:Uploading results into container
2024-11-28 21:47:41,667:INFO:Uploading model into container now
2024-11-28 21:47:41,668:INFO:_master_model_container: 6
2024-11-28 21:47:41,668:INFO:_display_container: 2
2024-11-28 21:47:41,668:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-11-28 21:47:41,668:INFO:create_model() successfully completed......................................
2024-11-28 21:47:41,774:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:41,774:INFO:Creating metrics dataframe
2024-11-28 21:47:41,777:INFO:Initializing Random Forest Classifier
2024-11-28 21:47:41,778:INFO:Total runtime is 0.17189667224884034 minutes
2024-11-28 21:47:41,778:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:41,778:INFO:Initializing create_model()
2024-11-28 21:47:41,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:41,778:INFO:Checking exceptions
2024-11-28 21:47:41,778:INFO:Importing libraries
2024-11-28 21:47:41,778:INFO:Copying training dataset
2024-11-28 21:47:41,781:INFO:Defining folds
2024-11-28 21:47:41,781:INFO:Declaring metric variables
2024-11-28 21:47:41,781:INFO:Importing untrained model
2024-11-28 21:47:41,781:INFO:Random Forest Classifier Imported successfully
2024-11-28 21:47:41,782:INFO:Starting cross validation
2024-11-28 21:47:41,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:42,078:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,082:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,082:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,083:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,088:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,090:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,098:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,099:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,104:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,109:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,110:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,119:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,179:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,184:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,188:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,237:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,243:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,247:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,376:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,381:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,388:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,391:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,396:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,400:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,408:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,412:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,417:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,436:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,440:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,445:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,453:INFO:Calculating mean and std
2024-11-28 21:47:42,453:INFO:Creating metrics dataframe
2024-11-28 21:47:42,456:INFO:Uploading results into container
2024-11-28 21:47:42,457:INFO:Uploading model into container now
2024-11-28 21:47:42,457:INFO:_master_model_container: 7
2024-11-28 21:47:42,457:INFO:_display_container: 2
2024-11-28 21:47:42,457:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-11-28 21:47:42,457:INFO:create_model() successfully completed......................................
2024-11-28 21:47:42,562:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:42,563:INFO:Creating metrics dataframe
2024-11-28 21:47:42,566:INFO:Initializing Quadratic Discriminant Analysis
2024-11-28 21:47:42,566:INFO:Total runtime is 0.18504073222478232 minutes
2024-11-28 21:47:42,566:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:42,566:INFO:Initializing create_model()
2024-11-28 21:47:42,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:42,566:INFO:Checking exceptions
2024-11-28 21:47:42,566:INFO:Importing libraries
2024-11-28 21:47:42,566:INFO:Copying training dataset
2024-11-28 21:47:42,569:INFO:Defining folds
2024-11-28 21:47:42,569:INFO:Declaring metric variables
2024-11-28 21:47:42,569:INFO:Importing untrained model
2024-11-28 21:47:42,569:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-28 21:47:42,569:INFO:Starting cross validation
2024-11-28 21:47:42,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:42,628:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,629:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,632:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,636:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,637:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,637:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,639:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,642:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,643:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,643:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,648:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,649:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,649:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,662:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,668:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,671:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,672:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,677:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,679:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,681:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,687:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,689:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,691:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,692:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,693:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,696:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,697:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,698:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,701:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,702:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:42,715:INFO:Calculating mean and std
2024-11-28 21:47:42,716:INFO:Creating metrics dataframe
2024-11-28 21:47:42,717:INFO:Uploading results into container
2024-11-28 21:47:42,718:INFO:Uploading model into container now
2024-11-28 21:47:42,718:INFO:_master_model_container: 8
2024-11-28 21:47:42,718:INFO:_display_container: 2
2024-11-28 21:47:42,718:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-28 21:47:42,718:INFO:create_model() successfully completed......................................
2024-11-28 21:47:42,823:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:42,823:INFO:Creating metrics dataframe
2024-11-28 21:47:42,825:INFO:Initializing Ada Boost Classifier
2024-11-28 21:47:42,826:INFO:Total runtime is 0.1893668015797933 minutes
2024-11-28 21:47:42,826:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:42,826:INFO:Initializing create_model()
2024-11-28 21:47:42,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:42,826:INFO:Checking exceptions
2024-11-28 21:47:42,826:INFO:Importing libraries
2024-11-28 21:47:42,826:INFO:Copying training dataset
2024-11-28 21:47:42,829:INFO:Defining folds
2024-11-28 21:47:42,829:INFO:Declaring metric variables
2024-11-28 21:47:42,829:INFO:Importing untrained model
2024-11-28 21:47:42,830:INFO:Ada Boost Classifier Imported successfully
2024-11-28 21:47:42,830:INFO:Starting cross validation
2024-11-28 21:47:42,831:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:42,878:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:42,878:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:42,879:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:42,880:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:42,885:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:43,030:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,034:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,036:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,036:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,038:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,039:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,042:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,043:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,047:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,066:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:43,070:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:43,076:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:43,095:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,100:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,104:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,134:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,141:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,141:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,146:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,146:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,147:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 21:47:43,150:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,208:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,213:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,219:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,220:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,224:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,225:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,229:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,230:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,233:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,298:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,302:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,306:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,320:INFO:Calculating mean and std
2024-11-28 21:47:43,320:INFO:Creating metrics dataframe
2024-11-28 21:47:43,322:INFO:Uploading results into container
2024-11-28 21:47:43,322:INFO:Uploading model into container now
2024-11-28 21:47:43,322:INFO:_master_model_container: 9
2024-11-28 21:47:43,322:INFO:_display_container: 2
2024-11-28 21:47:43,323:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-11-28 21:47:43,323:INFO:create_model() successfully completed......................................
2024-11-28 21:47:43,429:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:43,429:INFO:Creating metrics dataframe
2024-11-28 21:47:43,431:INFO:Initializing Gradient Boosting Classifier
2024-11-28 21:47:43,431:INFO:Total runtime is 0.199454665184021 minutes
2024-11-28 21:47:43,431:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:43,431:INFO:Initializing create_model()
2024-11-28 21:47:43,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:43,431:INFO:Checking exceptions
2024-11-28 21:47:43,431:INFO:Importing libraries
2024-11-28 21:47:43,432:INFO:Copying training dataset
2024-11-28 21:47:43,434:INFO:Defining folds
2024-11-28 21:47:43,434:INFO:Declaring metric variables
2024-11-28 21:47:43,435:INFO:Importing untrained model
2024-11-28 21:47:43,435:INFO:Gradient Boosting Classifier Imported successfully
2024-11-28 21:47:43,435:INFO:Starting cross validation
2024-11-28 21:47:43,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:43,590:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,594:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,594:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,598:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,599:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,603:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,623:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,629:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,633:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,645:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,651:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,670:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,694:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,695:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,698:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,699:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,703:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,710:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,751:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,756:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,761:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,762:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,765:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,770:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,788:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,793:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,797:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,821:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,825:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,830:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:43,845:INFO:Calculating mean and std
2024-11-28 21:47:43,846:INFO:Creating metrics dataframe
2024-11-28 21:47:43,848:INFO:Uploading results into container
2024-11-28 21:47:43,848:INFO:Uploading model into container now
2024-11-28 21:47:43,848:INFO:_master_model_container: 10
2024-11-28 21:47:43,848:INFO:_display_container: 2
2024-11-28 21:47:43,849:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-28 21:47:43,849:INFO:create_model() successfully completed......................................
2024-11-28 21:47:43,952:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:43,952:INFO:Creating metrics dataframe
2024-11-28 21:47:43,954:INFO:Initializing Linear Discriminant Analysis
2024-11-28 21:47:43,954:INFO:Total runtime is 0.20816531578699748 minutes
2024-11-28 21:47:43,954:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:43,955:INFO:Initializing create_model()
2024-11-28 21:47:43,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:43,955:INFO:Checking exceptions
2024-11-28 21:47:43,955:INFO:Importing libraries
2024-11-28 21:47:43,955:INFO:Copying training dataset
2024-11-28 21:47:43,959:INFO:Defining folds
2024-11-28 21:47:43,959:INFO:Declaring metric variables
2024-11-28 21:47:43,959:INFO:Importing untrained model
2024-11-28 21:47:43,959:INFO:Linear Discriminant Analysis Imported successfully
2024-11-28 21:47:43,959:INFO:Starting cross validation
2024-11-28 21:47:43,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:44,010:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,010:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,014:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,019:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,019:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,020:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,022:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,023:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,024:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,026:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,029:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,031:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,031:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,040:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,050:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,052:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,055:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,055:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,060:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,061:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,065:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,066:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,068:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,071:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,075:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,076:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,079:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,086:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,090:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,094:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,101:INFO:Calculating mean and std
2024-11-28 21:47:44,101:INFO:Creating metrics dataframe
2024-11-28 21:47:44,103:INFO:Uploading results into container
2024-11-28 21:47:44,103:INFO:Uploading model into container now
2024-11-28 21:47:44,104:INFO:_master_model_container: 11
2024-11-28 21:47:44,104:INFO:_display_container: 2
2024-11-28 21:47:44,104:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-28 21:47:44,104:INFO:create_model() successfully completed......................................
2024-11-28 21:47:44,210:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:44,210:INFO:Creating metrics dataframe
2024-11-28 21:47:44,213:INFO:Initializing Extra Trees Classifier
2024-11-28 21:47:44,213:INFO:Total runtime is 0.21248279412587484 minutes
2024-11-28 21:47:44,213:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:44,213:INFO:Initializing create_model()
2024-11-28 21:47:44,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:44,213:INFO:Checking exceptions
2024-11-28 21:47:44,213:INFO:Importing libraries
2024-11-28 21:47:44,213:INFO:Copying training dataset
2024-11-28 21:47:44,216:INFO:Defining folds
2024-11-28 21:47:44,216:INFO:Declaring metric variables
2024-11-28 21:47:44,216:INFO:Importing untrained model
2024-11-28 21:47:44,217:INFO:Extra Trees Classifier Imported successfully
2024-11-28 21:47:44,217:INFO:Starting cross validation
2024-11-28 21:47:44,218:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:44,472:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,474:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,477:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,477:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,478:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,482:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,483:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,483:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,483:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,488:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,491:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,492:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,588:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,595:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,599:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,682:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,687:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,692:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,772:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,773:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,777:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,777:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,778:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,781:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,781:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,782:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,788:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,789:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,794:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,799:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:44,814:INFO:Calculating mean and std
2024-11-28 21:47:44,814:INFO:Creating metrics dataframe
2024-11-28 21:47:44,816:INFO:Uploading results into container
2024-11-28 21:47:44,816:INFO:Uploading model into container now
2024-11-28 21:47:44,816:INFO:_master_model_container: 12
2024-11-28 21:47:44,817:INFO:_display_container: 2
2024-11-28 21:47:44,817:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-11-28 21:47:44,817:INFO:create_model() successfully completed......................................
2024-11-28 21:47:44,924:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:44,924:INFO:Creating metrics dataframe
2024-11-28 21:47:44,927:INFO:Initializing Light Gradient Boosting Machine
2024-11-28 21:47:44,927:INFO:Total runtime is 0.22438055276870728 minutes
2024-11-28 21:47:44,927:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:44,927:INFO:Initializing create_model()
2024-11-28 21:47:44,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:44,927:INFO:Checking exceptions
2024-11-28 21:47:44,927:INFO:Importing libraries
2024-11-28 21:47:44,927:INFO:Copying training dataset
2024-11-28 21:47:44,930:INFO:Defining folds
2024-11-28 21:47:44,930:INFO:Declaring metric variables
2024-11-28 21:47:44,931:INFO:Importing untrained model
2024-11-28 21:47:44,931:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-28 21:47:44,931:INFO:Starting cross validation
2024-11-28 21:47:44,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:45,248:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,248:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,254:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,257:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,260:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,263:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,267:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,283:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,289:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,293:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,297:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,311:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,319:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,325:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,332:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,339:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,348:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,358:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,497:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,503:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,509:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,510:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,513:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,513:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,515:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,517:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,519:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,520:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,523:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,525:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:45,541:INFO:Calculating mean and std
2024-11-28 21:47:45,542:INFO:Creating metrics dataframe
2024-11-28 21:47:45,543:INFO:Uploading results into container
2024-11-28 21:47:45,543:INFO:Uploading model into container now
2024-11-28 21:47:45,544:INFO:_master_model_container: 13
2024-11-28 21:47:45,544:INFO:_display_container: 2
2024-11-28 21:47:45,544:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-28 21:47:45,544:INFO:create_model() successfully completed......................................
2024-11-28 21:47:45,652:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:45,652:INFO:Creating metrics dataframe
2024-11-28 21:47:45,654:INFO:Initializing CatBoost Classifier
2024-11-28 21:47:45,654:INFO:Total runtime is 0.23650190432866414 minutes
2024-11-28 21:47:45,654:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:45,654:INFO:Initializing create_model()
2024-11-28 21:47:45,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:45,655:INFO:Checking exceptions
2024-11-28 21:47:45,655:INFO:Importing libraries
2024-11-28 21:47:45,655:INFO:Copying training dataset
2024-11-28 21:47:45,658:INFO:Defining folds
2024-11-28 21:47:45,658:INFO:Declaring metric variables
2024-11-28 21:47:45,658:INFO:Importing untrained model
2024-11-28 21:47:45,658:INFO:CatBoost Classifier Imported successfully
2024-11-28 21:47:45,659:INFO:Starting cross validation
2024-11-28 21:47:45,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:49,247:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,253:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,259:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,351:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,355:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,360:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,367:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,373:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,378:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,563:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,570:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,577:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,657:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,667:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,673:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,873:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,879:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:49,885:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,020:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,026:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,032:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,156:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,160:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,165:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,247:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,252:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,256:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,297:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,301:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,306:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,314:INFO:Calculating mean and std
2024-11-28 21:47:51,315:INFO:Creating metrics dataframe
2024-11-28 21:47:51,317:INFO:Uploading results into container
2024-11-28 21:47:51,318:INFO:Uploading model into container now
2024-11-28 21:47:51,318:INFO:_master_model_container: 14
2024-11-28 21:47:51,318:INFO:_display_container: 2
2024-11-28 21:47:51,318:INFO:<catboost.core.CatBoostClassifier object at 0x000002493040B0D0>
2024-11-28 21:47:51,318:INFO:create_model() successfully completed......................................
2024-11-28 21:47:51,498:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:51,498:INFO:Creating metrics dataframe
2024-11-28 21:47:51,500:INFO:Initializing Dummy Classifier
2024-11-28 21:47:51,500:INFO:Total runtime is 0.3339443643887838 minutes
2024-11-28 21:47:51,500:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:51,500:INFO:Initializing create_model()
2024-11-28 21:47:51,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249317C5750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:51,501:INFO:Checking exceptions
2024-11-28 21:47:51,501:INFO:Importing libraries
2024-11-28 21:47:51,501:INFO:Copying training dataset
2024-11-28 21:47:51,504:INFO:Defining folds
2024-11-28 21:47:51,504:INFO:Declaring metric variables
2024-11-28 21:47:51,504:INFO:Importing untrained model
2024-11-28 21:47:51,505:INFO:Dummy Classifier Imported successfully
2024-11-28 21:47:51,505:INFO:Starting cross validation
2024-11-28 21:47:51,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:51,552:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,554:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,556:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,556:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,558:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,558:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,559:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,560:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,560:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,560:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,561:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,562:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,563:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,566:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,569:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,569:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,571:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,573:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,580:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,583:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,593:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,594:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,596:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,599:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,602:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,603:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,604:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,605:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,598:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,607:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,612:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,612:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,612:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,614:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,615:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,617:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,619:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,621:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 21:47:51,624:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:51,642:INFO:Calculating mean and std
2024-11-28 21:47:51,643:INFO:Creating metrics dataframe
2024-11-28 21:47:51,645:INFO:Uploading results into container
2024-11-28 21:47:51,645:INFO:Uploading model into container now
2024-11-28 21:47:51,645:INFO:_master_model_container: 15
2024-11-28 21:47:51,645:INFO:_display_container: 2
2024-11-28 21:47:51,645:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-11-28 21:47:51,646:INFO:create_model() successfully completed......................................
2024-11-28 21:47:51,752:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:51,752:INFO:Creating metrics dataframe
2024-11-28 21:47:51,756:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-11-28 21:47:51,758:INFO:Initializing create_model()
2024-11-28 21:47:51,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:51,758:INFO:Checking exceptions
2024-11-28 21:47:51,759:INFO:Importing libraries
2024-11-28 21:47:51,759:INFO:Copying training dataset
2024-11-28 21:47:51,761:INFO:Defining folds
2024-11-28 21:47:51,761:INFO:Declaring metric variables
2024-11-28 21:47:51,761:INFO:Importing untrained model
2024-11-28 21:47:51,761:INFO:Declaring custom model
2024-11-28 21:47:51,762:INFO:Logistic Regression Imported successfully
2024-11-28 21:47:51,762:INFO:Cross validation set to False
2024-11-28 21:47:51,762:INFO:Fitting Model
2024-11-28 21:47:51,784:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 21:47:51,784:INFO:create_model() successfully completed......................................
2024-11-28 21:47:51,903:INFO:_master_model_container: 15
2024-11-28 21:47:51,903:INFO:_display_container: 2
2024-11-28 21:47:51,904:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 21:47:51,904:INFO:compare_models() successfully completed......................................
2024-11-28 21:47:51,904:INFO:Initializing tune_model()
2024-11-28 21:47:51,904:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-11-28 21:47:51,904:INFO:Checking exceptions
2024-11-28 21:47:51,907:INFO:Copying training dataset
2024-11-28 21:47:51,908:INFO:Checking base model
2024-11-28 21:47:51,908:INFO:Base model : Logistic Regression
2024-11-28 21:47:51,909:INFO:Declaring metric variables
2024-11-28 21:47:51,909:INFO:Defining Hyperparameters
2024-11-28 21:47:52,017:INFO:Tuning with n_jobs=-1
2024-11-28 21:47:52,017:INFO:Initializing RandomizedSearchCV
2024-11-28 21:47:52,738:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.049}
2024-11-28 21:47:52,738:INFO:Hyperparameter search completed
2024-11-28 21:47:52,738:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:52,739:INFO:Initializing create_model()
2024-11-28 21:47:52,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002492FD174D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.049})
2024-11-28 21:47:52,739:INFO:Checking exceptions
2024-11-28 21:47:52,739:INFO:Importing libraries
2024-11-28 21:47:52,739:INFO:Copying training dataset
2024-11-28 21:47:52,742:INFO:Defining folds
2024-11-28 21:47:52,742:INFO:Declaring metric variables
2024-11-28 21:47:52,742:INFO:Importing untrained model
2024-11-28 21:47:52,742:INFO:Declaring custom model
2024-11-28 21:47:52,743:INFO:Logistic Regression Imported successfully
2024-11-28 21:47:52,743:INFO:Starting cross validation
2024-11-28 21:47:52,744:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:52,792:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,795:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,797:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,803:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,807:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,808:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,809:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,812:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,813:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,817:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,819:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,824:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,829:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,835:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,838:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,840:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,848:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,851:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,856:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,860:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,863:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,868:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,870:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,872:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,876:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,876:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,876:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,880:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,881:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:52,889:INFO:Calculating mean and std
2024-11-28 21:47:52,889:INFO:Creating metrics dataframe
2024-11-28 21:47:52,891:INFO:Finalizing model
2024-11-28 21:47:52,911:INFO:Uploading results into container
2024-11-28 21:47:52,911:INFO:Uploading model into container now
2024-11-28 21:47:52,911:INFO:_master_model_container: 16
2024-11-28 21:47:52,911:INFO:_display_container: 3
2024-11-28 21:47:52,911:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 21:47:52,912:INFO:create_model() successfully completed......................................
2024-11-28 21:47:53,022:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:53,022:INFO:choose_better activated
2024-11-28 21:47:53,022:INFO:SubProcess create_model() called ==================================
2024-11-28 21:47:53,022:INFO:Initializing create_model()
2024-11-28 21:47:53,022:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 21:47:53,022:INFO:Checking exceptions
2024-11-28 21:47:53,023:INFO:Importing libraries
2024-11-28 21:47:53,023:INFO:Copying training dataset
2024-11-28 21:47:53,025:INFO:Defining folds
2024-11-28 21:47:53,025:INFO:Declaring metric variables
2024-11-28 21:47:53,026:INFO:Importing untrained model
2024-11-28 21:47:53,026:INFO:Declaring custom model
2024-11-28 21:47:53,027:INFO:Logistic Regression Imported successfully
2024-11-28 21:47:53,027:INFO:Starting cross validation
2024-11-28 21:47:53,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 21:47:53,071:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,076:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,078:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,078:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,080:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,082:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,084:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,085:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,090:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,090:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,091:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,094:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,095:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,097:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,097:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,104:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,121:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,122:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,125:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,128:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,129:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,139:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,140:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,143:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,144:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,144:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,147:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,149:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,150:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,151:WARNING:c:\Users\Pio\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'title') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 21:47:53,159:INFO:Calculating mean and std
2024-11-28 21:47:53,159:INFO:Creating metrics dataframe
2024-11-28 21:47:53,161:INFO:Finalizing model
2024-11-28 21:47:53,178:INFO:Uploading results into container
2024-11-28 21:47:53,178:INFO:Uploading model into container now
2024-11-28 21:47:53,179:INFO:_master_model_container: 17
2024-11-28 21:47:53,179:INFO:_display_container: 4
2024-11-28 21:47:53,179:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 21:47:53,179:INFO:create_model() successfully completed......................................
2024-11-28 21:47:53,283:INFO:SubProcess create_model() end ==================================
2024-11-28 21:47:53,283:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.8824
2024-11-28 21:47:53,284:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.8824
2024-11-28 21:47:53,284:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-11-28 21:47:53,284:INFO:choose_better completed
2024-11-28 21:47:53,285:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-11-28 21:47:53,296:INFO:_master_model_container: 17
2024-11-28 21:47:53,296:INFO:_display_container: 3
2024-11-28 21:47:53,296:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 21:47:53,296:INFO:tune_model() successfully completed......................................
2024-11-28 21:47:53,402:INFO:Initializing evaluate_model()
2024-11-28 21:47:53,402:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-28 21:47:53,727:INFO:Initializing plot_model()
2024-11-28 21:47:53,727:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002492CA45910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-11-28 21:47:53,727:INFO:Checking exceptions
2024-11-28 21:47:53,728:INFO:Preloading libraries
2024-11-28 21:47:53,729:INFO:Copying training dataset
2024-11-28 21:47:53,729:INFO:Plot type: pipeline
2024-11-28 21:47:56,679:INFO:Visual Rendered Successfully
2024-11-28 21:47:56,972:INFO:plot_model() successfully completed......................................
2024-11-28 21:47:57,009:INFO:Initializing save_model()
2024-11-28 21:47:57,009:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=modelo_treinado, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Pio\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mi...
                                                              strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(exclude=None, include=['titleType'],
                                    transformer=OrdinalEncoder(cols=['titleType'],
                                                               drop_invariant=False,
                                                               handle_missing='return_nan',
                                                               handle_unknown='value',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-11-28 21:47:57,010:INFO:Adding model into prep_pipe
2024-11-28 21:47:57,016:INFO:modelo_treinado.pkl saved in current working directory
2024-11-28 21:47:57,050:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-11-28 21:47:57,050:INFO:save_model() successfully completed......................................
2024-11-28 21:48:17,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:48:17,661:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:48:17,661:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:48:17,661:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:48:21,786:INFO:Initializing load_model()
2024-11-28 21:48:21,786:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:48:25,880:INFO:Initializing predict_model()
2024-11-28 21:48:25,880:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD0C190850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['titleType'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['titleType'],
                                    transformer=OrdinalEncoder(cols=['titleType'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}]))),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD0EE119E0>)
2024-11-28 21:48:25,880:INFO:Checking exceptions
2024-11-28 21:48:25,880:INFO:Preloading libraries
2024-11-28 21:48:25,880:INFO:Set up data.
2024-11-28 21:48:25,883:INFO:Set up index.
2024-11-28 21:49:00,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:49:00,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:49:00,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:49:00,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:49:04,445:INFO:Initializing load_model()
2024-11-28 21:49:04,445:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:49:07,814:INFO:Initializing predict_model()
2024-11-28 21:49:07,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B6DB396750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['titleType'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['titleType'],
                                    transformer=OrdinalEncoder(cols=['titleType'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'titleType',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': movie    0
short    1
NaN     -1
dtype: int64}]))),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B6DDA91A80>)
2024-11-28 21:49:07,814:INFO:Checking exceptions
2024-11-28 21:49:07,814:INFO:Preloading libraries
2024-11-28 21:49:07,814:INFO:Set up data.
2024-11-28 21:49:07,817:INFO:Set up index.
2024-11-28 21:51:09,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:51:09,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:51:09,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:51:09,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:51:14,006:INFO:Initializing load_model()
2024-11-28 21:51:14,006:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:52:11,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:52:11,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:52:11,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:52:11,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:52:15,112:INFO:Initializing load_model()
2024-11-28 21:52:15,112:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:53:45,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:53:45,557:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:53:45,557:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:53:45,557:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:53:49,568:INFO:Initializing load_model()
2024-11-28 21:53:49,568:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:54:37,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:54:37,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:54:37,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:54:37,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:54:42,695:INFO:Initializing load_model()
2024-11-28 21:54:42,695:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 21:59:02,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:59:02,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:59:02,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:59:02,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 21:59:06,495:INFO:Initializing load_model()
2024-11-28 21:59:06,496:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
2024-11-28 22:01:52,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 22:01:52,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 22:01:52,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 22:01:52,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 22:01:56,349:INFO:Initializing load_model()
2024-11-28 22:01:56,350:INFO:load_model(model_name=modelo_treinado, platform=None, authentication=None, verbose=True)
